// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package example.myapp.helloworld.grpc

/** @param volume
  *   map BigDecimal
  * @param entryPrice
  *   map BigDecimal
  * @param collateral
  *   map Option[BigDecimal]
  * @param pnl
  *   map Option[BigDecimal]
  */
@SerialVersionUID(0L)
final case class PositionReply(
    qcode: _root_.scala.Predef.String = "",
    volume: _root_.scala.Predef.String = "",
    entryPrice: _root_.scala.Predef.String = "",
    collateral: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    pnl: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    ) extends scalapb.GeneratedMessage with scalapb.Message[PositionReply] with scalapb.lenses.Updatable[PositionReply] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = qcode
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = volume
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = entryPrice
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      if (collateral.isDefined) {
        val __value = example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toBase(collateral.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (pnl.isDefined) {
        val __value = example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toBase(pnl.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = qcode
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = volume
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = entryPrice
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
      collateral.foreach { __v =>
        val __m = example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toBase(__v)
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      pnl.foreach { __v =>
        val __m = example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toBase(__v)
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): example.myapp.helloworld.grpc.PositionReply = {
      var __qcode = this.qcode
      var __volume = this.volume
      var __entryPrice = this.entryPrice
      var __collateral = this.collateral
      var __pnl = this.pnl
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __qcode = _input__.readString()
          case 18 =>
            __volume = _input__.readString()
          case 26 =>
            __entryPrice = _input__.readString()
          case 34 =>
            __collateral = Option(example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toCustom(_root_.scalapb.LiteParser.readMessage(_input__, __collateral.map(example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toBase).getOrElse(com.google.protobuf.wrappers.StringValue.defaultInstance))))
          case 42 =>
            __pnl = Option(example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toCustom(_root_.scalapb.LiteParser.readMessage(_input__, __pnl.map(example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toBase).getOrElse(com.google.protobuf.wrappers.StringValue.defaultInstance))))
          case tag => _input__.skipField(tag)
        }
      }
      example.myapp.helloworld.grpc.PositionReply(
          qcode = __qcode,
          volume = __volume,
          entryPrice = __entryPrice,
          collateral = __collateral,
          pnl = __pnl
      )
    }
    def withQcode(__v: _root_.scala.Predef.String): PositionReply = copy(qcode = __v)
    def withVolume(__v: _root_.scala.Predef.String): PositionReply = copy(volume = __v)
    def withEntryPrice(__v: _root_.scala.Predef.String): PositionReply = copy(entryPrice = __v)
    def getCollateral: _root_.scala.Predef.String = collateral.getOrElse(example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toCustom(com.google.protobuf.wrappers.StringValue.defaultInstance))
    def clearCollateral: PositionReply = copy(collateral = _root_.scala.None)
    def withCollateral(__v: _root_.scala.Predef.String): PositionReply = copy(collateral = Option(__v))
    def getPnl: _root_.scala.Predef.String = pnl.getOrElse(example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toCustom(com.google.protobuf.wrappers.StringValue.defaultInstance))
    def clearPnl: PositionReply = copy(pnl = _root_.scala.None)
    def withPnl(__v: _root_.scala.Predef.String): PositionReply = copy(pnl = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = qcode
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = volume
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = entryPrice
          if (__t != "") __t else null
        }
        case 4 => collateral.map(example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toBase).orNull
        case 5 => pnl.map(example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toBase).orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(qcode)
        case 2 => _root_.scalapb.descriptors.PString(volume)
        case 3 => _root_.scalapb.descriptors.PString(entryPrice)
        case 4 => collateral.map(example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => pnl.map(example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = example.myapp.helloworld.grpc.PositionReply
}

object PositionReply extends scalapb.GeneratedMessageCompanion[example.myapp.helloworld.grpc.PositionReply] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[example.myapp.helloworld.grpc.PositionReply] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): example.myapp.helloworld.grpc.PositionReply = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    example.myapp.helloworld.grpc.PositionReply(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[com.google.protobuf.wrappers.StringValue]].map(example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toCustom),
      __fieldsMap.get(__fields.get(4)).asInstanceOf[_root_.scala.Option[com.google.protobuf.wrappers.StringValue]].map(example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toCustom)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[example.myapp.helloworld.grpc.PositionReply] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      example.myapp.helloworld.grpc.PositionReply(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.StringValue]]).map(example.myapp.helloworld.grpc.PositionReply._typemapper_collateral.toCustom),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.StringValue]]).map(example.myapp.helloworld.grpc.PositionReply._typemapper_pnl.toCustom)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = HelloworldProto.javaDescriptor.getMessageTypes.get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = HelloworldProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = com.google.protobuf.wrappers.StringValue
      case 5 => __out = com.google.protobuf.wrappers.StringValue
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = example.myapp.helloworld.grpc.PositionReply(
    qcode = "",
    volume = "",
    entryPrice = "",
    collateral = _root_.scala.None,
    pnl = _root_.scala.None
  )
  implicit class PositionReplyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, example.myapp.helloworld.grpc.PositionReply]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, example.myapp.helloworld.grpc.PositionReply](_l) {
    def qcode: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.qcode)((c_, f_) => c_.copy(qcode = f_))
    def volume: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.volume)((c_, f_) => c_.copy(volume = f_))
    def entryPrice: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.entryPrice)((c_, f_) => c_.copy(entryPrice = f_))
    def collateral: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getCollateral)((c_, f_) => c_.copy(collateral = Option(f_)))
    def optionalCollateral: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.collateral)((c_, f_) => c_.copy(collateral = f_))
    def pnl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPnl)((c_, f_) => c_.copy(pnl = Option(f_)))
    def optionalPnl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.pnl)((c_, f_) => c_.copy(pnl = f_))
  }
  final val QCODE_FIELD_NUMBER = 1
  final val VOLUME_FIELD_NUMBER = 2
  final val ENTRYPRICE_FIELD_NUMBER = 3
  final val COLLATERAL_FIELD_NUMBER = 4
  final val PNL_FIELD_NUMBER = 5
  @transient
  private val _typemapper_collateral: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.StringValue, _root_.scala.Predef.String] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.StringValue, _root_.scala.Predef.String]]
  @transient
  private val _typemapper_pnl: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.StringValue, _root_.scala.Predef.String] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.StringValue, _root_.scala.Predef.String]]
  def of(
    qcode: _root_.scala.Predef.String,
    volume: _root_.scala.Predef.String,
    entryPrice: _root_.scala.Predef.String,
    collateral: _root_.scala.Option[_root_.scala.Predef.String],
    pnl: _root_.scala.Option[_root_.scala.Predef.String]
  ): _root_.example.myapp.helloworld.grpc.PositionReply = _root_.example.myapp.helloworld.grpc.PositionReply(
    qcode,
    volume,
    entryPrice,
    collateral,
    pnl
  )
}
