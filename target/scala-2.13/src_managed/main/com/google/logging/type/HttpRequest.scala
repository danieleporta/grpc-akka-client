// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.logging.`type`

/** A common proto for logging HTTP requests. Only contains semantics
  * defined by the HTTP specification. Product-specific logging
  * information MUST be defined in a separate message.
  *
  * @param requestMethod
  *   The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.
  * @param requestUrl
  *   The scheme (http, https), the host name, the path and the query
  *   portion of the URL that was requested.
  *   Example: `"http://example.com/some/info?color=red"`.
  * @param requestSize
  *   The size of the HTTP request message in bytes, including the request
  *   headers and the request body.
  * @param status
  *   The response code indicating the status of response.
  *   Examples: 200, 404.
  * @param responseSize
  *   The size of the HTTP response message sent back to the client, in bytes,
  *   including the response headers and the response body.
  * @param userAgent
  *   The user agent sent by the client. Example:
  *   `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
  * @param remoteIp
  *   The IP address (IPv4 or IPv6) of the client that issued the HTTP
  *   request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
  * @param serverIp
  *   The IP address (IPv4 or IPv6) of the origin server that the request was
  *   sent to.
  * @param referer
  *   The referer URL of the request, as defined in
  *   [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
  * @param latency
  *   The request processing latency on the server, from the time the request was
  *   received until the response was sent.
  * @param cacheLookup
  *   Whether or not a cache lookup was attempted.
  * @param cacheHit
  *   Whether or not an entity was served from cache
  *   (with or without validation).
  * @param cacheValidatedWithOriginServer
  *   Whether or not the response was validated with the origin server before
  *   being served from cache. This field is only meaningful if `cache_hit` is
  *   True.
  * @param cacheFillBytes
  *   The number of HTTP response bytes inserted into cache. Set only when a
  *   cache fill was attempted.
  * @param protocol
  *   Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2", "websocket"
  */
@SerialVersionUID(0L)
final case class HttpRequest(
    requestMethod: _root_.scala.Predef.String = "",
    requestUrl: _root_.scala.Predef.String = "",
    requestSize: _root_.scala.Long = 0L,
    status: _root_.scala.Int = 0,
    responseSize: _root_.scala.Long = 0L,
    userAgent: _root_.scala.Predef.String = "",
    remoteIp: _root_.scala.Predef.String = "",
    serverIp: _root_.scala.Predef.String = "",
    referer: _root_.scala.Predef.String = "",
    latency: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    cacheLookup: _root_.scala.Boolean = false,
    cacheHit: _root_.scala.Boolean = false,
    cacheValidatedWithOriginServer: _root_.scala.Boolean = false,
    cacheFillBytes: _root_.scala.Long = 0L,
    protocol: _root_.scala.Predef.String = ""
    ) extends scalapb.GeneratedMessage with scalapb.Message[HttpRequest] with scalapb.lenses.Updatable[HttpRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = requestMethod
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = requestUrl
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = requestSize
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = status
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      
      {
        val __value = responseSize
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, __value)
        }
      };
      
      {
        val __value = userAgent
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = remoteIp
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = serverIp
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(13, __value)
        }
      };
      
      {
        val __value = referer
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      if (latency.isDefined) {
        val __value = latency.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = cacheLookup
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, __value)
        }
      };
      
      {
        val __value = cacheHit
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(9, __value)
        }
      };
      
      {
        val __value = cacheValidatedWithOriginServer
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(10, __value)
        }
      };
      
      {
        val __value = cacheFillBytes
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(12, __value)
        }
      };
      
      {
        val __value = protocol
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(15, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = requestMethod
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = requestUrl
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = requestSize
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = status
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      {
        val __v = responseSize
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      {
        val __v = userAgent
        if (__v != "") {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = remoteIp
        if (__v != "") {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = referer
        if (__v != "") {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = cacheHit
        if (__v != false) {
          _output__.writeBool(9, __v)
        }
      };
      {
        val __v = cacheValidatedWithOriginServer
        if (__v != false) {
          _output__.writeBool(10, __v)
        }
      };
      {
        val __v = cacheLookup
        if (__v != false) {
          _output__.writeBool(11, __v)
        }
      };
      {
        val __v = cacheFillBytes
        if (__v != 0L) {
          _output__.writeInt64(12, __v)
        }
      };
      {
        val __v = serverIp
        if (__v != "") {
          _output__.writeString(13, __v)
        }
      };
      latency.foreach { __v =>
        val __m = __v
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = protocol
        if (__v != "") {
          _output__.writeString(15, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.logging.`type`.HttpRequest = {
      var __requestMethod = this.requestMethod
      var __requestUrl = this.requestUrl
      var __requestSize = this.requestSize
      var __status = this.status
      var __responseSize = this.responseSize
      var __userAgent = this.userAgent
      var __remoteIp = this.remoteIp
      var __serverIp = this.serverIp
      var __referer = this.referer
      var __latency = this.latency
      var __cacheLookup = this.cacheLookup
      var __cacheHit = this.cacheHit
      var __cacheValidatedWithOriginServer = this.cacheValidatedWithOriginServer
      var __cacheFillBytes = this.cacheFillBytes
      var __protocol = this.protocol
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __requestMethod = _input__.readString()
          case 18 =>
            __requestUrl = _input__.readString()
          case 24 =>
            __requestSize = _input__.readInt64()
          case 32 =>
            __status = _input__.readInt32()
          case 40 =>
            __responseSize = _input__.readInt64()
          case 50 =>
            __userAgent = _input__.readString()
          case 58 =>
            __remoteIp = _input__.readString()
          case 106 =>
            __serverIp = _input__.readString()
          case 66 =>
            __referer = _input__.readString()
          case 114 =>
            __latency = Option(_root_.scalapb.LiteParser.readMessage(_input__, __latency.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)))
          case 88 =>
            __cacheLookup = _input__.readBool()
          case 72 =>
            __cacheHit = _input__.readBool()
          case 80 =>
            __cacheValidatedWithOriginServer = _input__.readBool()
          case 96 =>
            __cacheFillBytes = _input__.readInt64()
          case 122 =>
            __protocol = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.google.logging.`type`.HttpRequest(
          requestMethod = __requestMethod,
          requestUrl = __requestUrl,
          requestSize = __requestSize,
          status = __status,
          responseSize = __responseSize,
          userAgent = __userAgent,
          remoteIp = __remoteIp,
          serverIp = __serverIp,
          referer = __referer,
          latency = __latency,
          cacheLookup = __cacheLookup,
          cacheHit = __cacheHit,
          cacheValidatedWithOriginServer = __cacheValidatedWithOriginServer,
          cacheFillBytes = __cacheFillBytes,
          protocol = __protocol
      )
    }
    def withRequestMethod(__v: _root_.scala.Predef.String): HttpRequest = copy(requestMethod = __v)
    def withRequestUrl(__v: _root_.scala.Predef.String): HttpRequest = copy(requestUrl = __v)
    def withRequestSize(__v: _root_.scala.Long): HttpRequest = copy(requestSize = __v)
    def withStatus(__v: _root_.scala.Int): HttpRequest = copy(status = __v)
    def withResponseSize(__v: _root_.scala.Long): HttpRequest = copy(responseSize = __v)
    def withUserAgent(__v: _root_.scala.Predef.String): HttpRequest = copy(userAgent = __v)
    def withRemoteIp(__v: _root_.scala.Predef.String): HttpRequest = copy(remoteIp = __v)
    def withServerIp(__v: _root_.scala.Predef.String): HttpRequest = copy(serverIp = __v)
    def withReferer(__v: _root_.scala.Predef.String): HttpRequest = copy(referer = __v)
    def getLatency: com.google.protobuf.duration.Duration = latency.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearLatency: HttpRequest = copy(latency = _root_.scala.None)
    def withLatency(__v: com.google.protobuf.duration.Duration): HttpRequest = copy(latency = Option(__v))
    def withCacheLookup(__v: _root_.scala.Boolean): HttpRequest = copy(cacheLookup = __v)
    def withCacheHit(__v: _root_.scala.Boolean): HttpRequest = copy(cacheHit = __v)
    def withCacheValidatedWithOriginServer(__v: _root_.scala.Boolean): HttpRequest = copy(cacheValidatedWithOriginServer = __v)
    def withCacheFillBytes(__v: _root_.scala.Long): HttpRequest = copy(cacheFillBytes = __v)
    def withProtocol(__v: _root_.scala.Predef.String): HttpRequest = copy(protocol = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = requestMethod
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = requestUrl
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = requestSize
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = status
          if (__t != 0) __t else null
        }
        case 5 => {
          val __t = responseSize
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = userAgent
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = remoteIp
          if (__t != "") __t else null
        }
        case 13 => {
          val __t = serverIp
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = referer
          if (__t != "") __t else null
        }
        case 14 => latency.orNull
        case 11 => {
          val __t = cacheLookup
          if (__t != false) __t else null
        }
        case 9 => {
          val __t = cacheHit
          if (__t != false) __t else null
        }
        case 10 => {
          val __t = cacheValidatedWithOriginServer
          if (__t != false) __t else null
        }
        case 12 => {
          val __t = cacheFillBytes
          if (__t != 0L) __t else null
        }
        case 15 => {
          val __t = protocol
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(requestMethod)
        case 2 => _root_.scalapb.descriptors.PString(requestUrl)
        case 3 => _root_.scalapb.descriptors.PLong(requestSize)
        case 4 => _root_.scalapb.descriptors.PInt(status)
        case 5 => _root_.scalapb.descriptors.PLong(responseSize)
        case 6 => _root_.scalapb.descriptors.PString(userAgent)
        case 7 => _root_.scalapb.descriptors.PString(remoteIp)
        case 13 => _root_.scalapb.descriptors.PString(serverIp)
        case 8 => _root_.scalapb.descriptors.PString(referer)
        case 14 => latency.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => _root_.scalapb.descriptors.PBoolean(cacheLookup)
        case 9 => _root_.scalapb.descriptors.PBoolean(cacheHit)
        case 10 => _root_.scalapb.descriptors.PBoolean(cacheValidatedWithOriginServer)
        case 12 => _root_.scalapb.descriptors.PLong(cacheFillBytes)
        case 15 => _root_.scalapb.descriptors.PString(protocol)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.logging.`type`.HttpRequest
}

object HttpRequest extends scalapb.GeneratedMessageCompanion[com.google.logging.`type`.HttpRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.logging.`type`.HttpRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.logging.`type`.HttpRequest = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.logging.`type`.HttpRequest(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(3), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(4), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(5), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(6), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(7), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(8), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.get(__fields.get(9)).asInstanceOf[_root_.scala.Option[com.google.protobuf.duration.Duration]],
      __fieldsMap.getOrElse(__fields.get(10), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(11), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(12), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(13), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(14), "").asInstanceOf[_root_.scala.Predef.String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.logging.`type`.HttpRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.logging.`type`.HttpRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = HttpRequestProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = HttpRequestProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 14 => __out = com.google.protobuf.duration.Duration
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.logging.`type`.HttpRequest(
    requestMethod = "",
    requestUrl = "",
    requestSize = 0L,
    status = 0,
    responseSize = 0L,
    userAgent = "",
    remoteIp = "",
    serverIp = "",
    referer = "",
    latency = _root_.scala.None,
    cacheLookup = false,
    cacheHit = false,
    cacheValidatedWithOriginServer = false,
    cacheFillBytes = 0L,
    protocol = ""
  )
  implicit class HttpRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.logging.`type`.HttpRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.logging.`type`.HttpRequest](_l) {
    def requestMethod: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.requestMethod)((c_, f_) => c_.copy(requestMethod = f_))
    def requestUrl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.requestUrl)((c_, f_) => c_.copy(requestUrl = f_))
    def requestSize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.requestSize)((c_, f_) => c_.copy(requestSize = f_))
    def status: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def responseSize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.responseSize)((c_, f_) => c_.copy(responseSize = f_))
    def userAgent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userAgent)((c_, f_) => c_.copy(userAgent = f_))
    def remoteIp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.remoteIp)((c_, f_) => c_.copy(remoteIp = f_))
    def serverIp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.serverIp)((c_, f_) => c_.copy(serverIp = f_))
    def referer: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.referer)((c_, f_) => c_.copy(referer = f_))
    def latency: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getLatency)((c_, f_) => c_.copy(latency = Option(f_)))
    def optionalLatency: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.latency)((c_, f_) => c_.copy(latency = f_))
    def cacheLookup: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.cacheLookup)((c_, f_) => c_.copy(cacheLookup = f_))
    def cacheHit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.cacheHit)((c_, f_) => c_.copy(cacheHit = f_))
    def cacheValidatedWithOriginServer: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.cacheValidatedWithOriginServer)((c_, f_) => c_.copy(cacheValidatedWithOriginServer = f_))
    def cacheFillBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.cacheFillBytes)((c_, f_) => c_.copy(cacheFillBytes = f_))
    def protocol: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.protocol)((c_, f_) => c_.copy(protocol = f_))
  }
  final val REQUEST_METHOD_FIELD_NUMBER = 1
  final val REQUEST_URL_FIELD_NUMBER = 2
  final val REQUEST_SIZE_FIELD_NUMBER = 3
  final val STATUS_FIELD_NUMBER = 4
  final val RESPONSE_SIZE_FIELD_NUMBER = 5
  final val USER_AGENT_FIELD_NUMBER = 6
  final val REMOTE_IP_FIELD_NUMBER = 7
  final val SERVER_IP_FIELD_NUMBER = 13
  final val REFERER_FIELD_NUMBER = 8
  final val LATENCY_FIELD_NUMBER = 14
  final val CACHE_LOOKUP_FIELD_NUMBER = 11
  final val CACHE_HIT_FIELD_NUMBER = 9
  final val CACHE_VALIDATED_WITH_ORIGIN_SERVER_FIELD_NUMBER = 10
  final val CACHE_FILL_BYTES_FIELD_NUMBER = 12
  final val PROTOCOL_FIELD_NUMBER = 15
  def of(
    requestMethod: _root_.scala.Predef.String,
    requestUrl: _root_.scala.Predef.String,
    requestSize: _root_.scala.Long,
    status: _root_.scala.Int,
    responseSize: _root_.scala.Long,
    userAgent: _root_.scala.Predef.String,
    remoteIp: _root_.scala.Predef.String,
    serverIp: _root_.scala.Predef.String,
    referer: _root_.scala.Predef.String,
    latency: _root_.scala.Option[com.google.protobuf.duration.Duration],
    cacheLookup: _root_.scala.Boolean,
    cacheHit: _root_.scala.Boolean,
    cacheValidatedWithOriginServer: _root_.scala.Boolean,
    cacheFillBytes: _root_.scala.Long,
    protocol: _root_.scala.Predef.String
  ): _root_.com.google.logging.`type`.HttpRequest = _root_.com.google.logging.`type`.HttpRequest(
    requestMethod,
    requestUrl,
    requestSize,
    status,
    responseSize,
    userAgent,
    remoteIp,
    serverIp,
    referer,
    latency,
    cacheLookup,
    cacheHit,
    cacheValidatedWithOriginServer,
    cacheFillBytes,
    protocol
  )
}
