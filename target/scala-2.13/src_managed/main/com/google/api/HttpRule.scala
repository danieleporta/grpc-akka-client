// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.api

/** `HttpRule` defines the mapping of an RPC method to one or more HTTP
  * REST API methods. The mapping specifies how different portions of the RPC
  * request message are mapped to URL path, URL query parameters, and
  * HTTP request body. The mapping is typically specified as an
  * `google.api.http` annotation on the RPC method,
  * see "google/api/annotations.proto" for details.
  *
  * The mapping consists of a field specifying the path template and
  * method kind.  The path template can refer to fields in the request
  * message, as in the example below which describes a REST GET
  * operation on a resource collection of messages:
  *
  *
  *     service Messaging {
  *       rpc GetMessage(GetMessageRequest) returns (Message) {
  *         option (google.api.http).get = "/v1/messages/{message_id}/{sub.subfield}";
  *       }
  *     }
  *     message GetMessageRequest {
  *       message SubMessage {
  *         string subfield = 1;
  *       }
  *       string message_id = 1; // mapped to the URL
  *       SubMessage sub = 2;    // `sub.subfield` is url-mapped
  *     }
  *     message Message {
  *       string text = 1; // content of the resource
  *     }
  *
  * The same http annotation can alternatively be expressed inside the
  * `GRPC API Configuration` YAML file.
  *
  *     http:
  *       rules:
  *         - selector: &lt;proto_package_name&gt;.Messaging.GetMessage
  *           get: /v1/messages/{message_id}/{sub.subfield}
  *
  * This definition enables an automatic, bidrectional mapping of HTTP
  * JSON to RPC. Example:
  *
  * HTTP | RPC
  * -----|-----
  * `GET /v1/messages/123456/foo`  | `GetMessage(message_id: "123456" sub: SubMessage(subfield: "foo"))`
  *
  * In general, not only fields but also field paths can be referenced
  * from a path pattern. Fields mapped to the path pattern cannot be
  * repeated and must have a primitive (non-message) type.
  *
  * Any fields in the request message which are not bound by the path
  * pattern automatically become (optional) HTTP query
  * parameters. Assume the following definition of the request message:
  *
  *
  *     service Messaging {
  *       rpc GetMessage(GetMessageRequest) returns (Message) {
  *         option (google.api.http).get = "/v1/messages/{message_id}";
  *       }
  *     }
  *     message GetMessageRequest {
  *       message SubMessage {
  *         string subfield = 1;
  *       }
  *       string message_id = 1; // mapped to the URL
  *       int64 revision = 2;    // becomes a parameter
  *       SubMessage sub = 3;    // `sub.subfield` becomes a parameter
  *     }
  *
  *
  * This enables a HTTP JSON to RPC mapping as below:
  *
  * HTTP | RPC
  * -----|-----
  * `GET /v1/messages/123456?revision=2&amp;sub.subfield=foo` | `GetMessage(message_id: "123456" revision: 2 sub: SubMessage(subfield: "foo"))`
  *
  * Note that fields which are mapped to HTTP parameters must have a
  * primitive type or a repeated primitive type. Message types are not
  * allowed. In the case of a repeated type, the parameter can be
  * repeated in the URL, as in `...?param=A&amp;param=B`.
  *
  * For HTTP method kinds which allow a request body, the `body` field
  * specifies the mapping. Consider a REST update method on the
  * message resource collection:
  *
  *
  *     service Messaging {
  *       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {
  *         option (google.api.http) = {
  *           put: "/v1/messages/{message_id}"
  *           body: "message"
  *         };
  *       }
  *     }
  *     message UpdateMessageRequest {
  *       string message_id = 1; // mapped to the URL
  *       Message message = 2;   // mapped to the body
  *     }
  *
  *
  * The following HTTP JSON to RPC mapping is enabled, where the
  * representation of the JSON in the request body is determined by
  * protos JSON encoding:
  *
  * HTTP | RPC
  * -----|-----
  * `PUT /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id: "123456" message { text: "Hi!" })`
  *
  * The special name `*` can be used in the body mapping to define that
  * every field not bound by the path template should be mapped to the
  * request body.  This enables the following alternative definition of
  * the update method:
  *
  *     service Messaging {
  *       rpc UpdateMessage(Message) returns (Message) {
  *         option (google.api.http) = {
  *           put: "/v1/messages/{message_id}"
  *           body: "*"
  *         };
  *       }
  *     }
  *     message Message {
  *       string message_id = 1;
  *       string text = 2;
  *     }
  *
  *
  * The following HTTP JSON to RPC mapping is enabled:
  *
  * HTTP | RPC
  * -----|-----
  * `PUT /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id: "123456" text: "Hi!")`
  *
  * Note that when using `*` in the body mapping, it is not possible to
  * have HTTP parameters, as all fields not bound by the path end in
  * the body. This makes this option more rarely used in practice of
  * defining REST APIs. The common usage of `*` is in custom methods
  * which don't use the URL at all for transferring data.
  *
  * It is possible to define multiple HTTP methods for one RPC by using
  * the `additional_bindings` option. Example:
  *
  *     service Messaging {
  *       rpc GetMessage(GetMessageRequest) returns (Message) {
  *         option (google.api.http) = {
  *           get: "/v1/messages/{message_id}"
  *           additional_bindings {
  *             get: "/v1/users/{user_id}/messages/{message_id}"
  *           }
  *         };
  *       }
  *     }
  *     message GetMessageRequest {
  *       string message_id = 1;
  *       string user_id = 2;
  *     }
  *
  *
  * This enables the following two alternative HTTP JSON to RPC
  * mappings:
  *
  * HTTP | RPC
  * -----|-----
  * `GET /v1/messages/123456` | `GetMessage(message_id: "123456")`
  * `GET /v1/users/me/messages/123456` | `GetMessage(user_id: "me" message_id: "123456")`
  *
  * # Rules for HTTP mapping
  *
  * The rules for mapping HTTP path, query parameters, and body fields
  * to the request message are as follows:
  *
  * 1. The `body` field specifies either `*` or a field path, or is
  *    omitted. If omitted, it indicates there is no HTTP request body.
  * 2. Leaf fields (recursive expansion of nested messages in the
  *    request) can be classified into three types:
  *     (a) Matched in the URL template.
  *     (b) Covered by body (if body is `*`, everything except (a) fields;
  *         else everything under the body field)
  *     (c) All other fields.
  * 3. URL query parameters found in the HTTP request are mapped to (c) fields.
  * 4. Any body sent with an HTTP request can contain only (b) fields.
  *
  * The syntax of the path template is as follows:
  *
  *     Template = "/" Segments [ Verb ] ;
  *     Segments = Segment { "/" Segment } ;
  *     Segment  = "*" | "**" | LITERAL | Variable ;
  *     Variable = "{" FieldPath [ "=" Segments ] "}" ;
  *     FieldPath = IDENT { "." IDENT } ;
  *     Verb     = ":" LITERAL ;
  *
  * The syntax `*` matches a single path segment. The syntax `**` matches zero
  * or more path segments, which must be the last part of the path except the
  * `Verb`. The syntax `LITERAL` matches literal text in the path.
  *
  * The syntax `Variable` matches part of the URL path as specified by its
  * template. A variable template must not contain other variables. If a variable
  * matches a single path segment, its template may be omitted, e.g. `{var}`
  * is equivalent to `{var=*}`.
  *
  * If a variable contains exactly one path segment, such as `"{var}"` or
  * `"{var=*}"`, when such a variable is expanded into a URL path, all characters
  * except `[-_.~0-9a-zA-Z]` are percent-encoded. Such variables show up in the
  * Discovery Document as `{var}`.
  *
  * If a variable contains one or more path segments, such as `"{var=foo/&#42;}"`
  * or `"{var=**}"`, when such a variable is expanded into a URL path, all
  * characters except `[-_.~/0-9a-zA-Z]` are percent-encoded. Such variables
  * show up in the Discovery Document as `{+var}`.
  *
  * NOTE: While the single segment variable matches the semantics of
  * [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2
  * Simple String Expansion, the multi segment variable **does not** match
  * RFC 6570 Reserved Expansion. The reason is that the Reserved Expansion
  * does not expand special characters like `?` and `#`, which would lead
  * to invalid URLs.
  *
  * NOTE: the field paths in variables and in the `body` must not refer to
  * repeated fields or map fields.
  *
  * @param selector
  *   Selects methods to which this rule applies.
  *  
  *   Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
  * @param body
  *   The name of the request field whose value is mapped to the HTTP body, or
  *   `*` for mapping all fields not captured by the path pattern to the HTTP
  *   body. NOTE: the referred field must not be a repeated field and must be
  *   present at the top-level of request message type.
  * @param additionalBindings
  *   Additional HTTP bindings for the selector. Nested bindings must
  *   not contain an `additional_bindings` field themselves (that is,
  *   the nesting may only be one level deep).
  */
@SerialVersionUID(0L)
final case class HttpRule(
    selector: _root_.scala.Predef.String = "",
    body: _root_.scala.Predef.String = "",
    additionalBindings: _root_.scala.Seq[com.google.api.HttpRule] = _root_.scala.Seq.empty,
    pattern: com.google.api.HttpRule.Pattern = com.google.api.HttpRule.Pattern.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[HttpRule] with scalapb.lenses.Updatable[HttpRule] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = selector
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (pattern.get.isDefined) {
        val __value = pattern.get.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      };
      if (pattern.put.isDefined) {
        val __value = pattern.put.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      };
      if (pattern.post.isDefined) {
        val __value = pattern.post.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      };
      if (pattern.delete.isDefined) {
        val __value = pattern.delete.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
      };
      if (pattern.patch.isDefined) {
        val __value = pattern.patch.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
      };
      if (pattern.custom.isDefined) {
        val __value = pattern.custom.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = body
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      additionalBindings.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = selector
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      pattern.get.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      pattern.put.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      pattern.post.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      pattern.delete.foreach { __v =>
        val __m = __v
        _output__.writeString(5, __m)
      };
      pattern.patch.foreach { __v =>
        val __m = __v
        _output__.writeString(6, __m)
      };
      {
        val __v = body
        if (__v != "") {
          _output__.writeString(7, __v)
        }
      };
      pattern.custom.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      additionalBindings.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.api.HttpRule = {
      var __selector = this.selector
      var __body = this.body
      val __additionalBindings = (_root_.scala.collection.immutable.Vector.newBuilder[com.google.api.HttpRule] ++= this.additionalBindings)
      var __pattern = this.pattern
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __selector = _input__.readString()
          case 18 =>
            __pattern = com.google.api.HttpRule.Pattern.Get(_input__.readString())
          case 26 =>
            __pattern = com.google.api.HttpRule.Pattern.Put(_input__.readString())
          case 34 =>
            __pattern = com.google.api.HttpRule.Pattern.Post(_input__.readString())
          case 42 =>
            __pattern = com.google.api.HttpRule.Pattern.Delete(_input__.readString())
          case 50 =>
            __pattern = com.google.api.HttpRule.Pattern.Patch(_input__.readString())
          case 66 =>
            __pattern = com.google.api.HttpRule.Pattern.Custom(_root_.scalapb.LiteParser.readMessage(_input__, pattern.custom.getOrElse(com.google.api.CustomHttpPattern.defaultInstance)))
          case 58 =>
            __body = _input__.readString()
          case 90 =>
            __additionalBindings += _root_.scalapb.LiteParser.readMessage(_input__, com.google.api.HttpRule.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      com.google.api.HttpRule(
          selector = __selector,
          body = __body,
          additionalBindings = __additionalBindings.result(),
          pattern = __pattern
      )
    }
    def withSelector(__v: _root_.scala.Predef.String): HttpRule = copy(selector = __v)
    def getGet: _root_.scala.Predef.String = pattern.get.getOrElse("")
    def withGet(__v: _root_.scala.Predef.String): HttpRule = copy(pattern = com.google.api.HttpRule.Pattern.Get(__v))
    def getPut: _root_.scala.Predef.String = pattern.put.getOrElse("")
    def withPut(__v: _root_.scala.Predef.String): HttpRule = copy(pattern = com.google.api.HttpRule.Pattern.Put(__v))
    def getPost: _root_.scala.Predef.String = pattern.post.getOrElse("")
    def withPost(__v: _root_.scala.Predef.String): HttpRule = copy(pattern = com.google.api.HttpRule.Pattern.Post(__v))
    def getDelete: _root_.scala.Predef.String = pattern.delete.getOrElse("")
    def withDelete(__v: _root_.scala.Predef.String): HttpRule = copy(pattern = com.google.api.HttpRule.Pattern.Delete(__v))
    def getPatch: _root_.scala.Predef.String = pattern.patch.getOrElse("")
    def withPatch(__v: _root_.scala.Predef.String): HttpRule = copy(pattern = com.google.api.HttpRule.Pattern.Patch(__v))
    def getCustom: com.google.api.CustomHttpPattern = pattern.custom.getOrElse(com.google.api.CustomHttpPattern.defaultInstance)
    def withCustom(__v: com.google.api.CustomHttpPattern): HttpRule = copy(pattern = com.google.api.HttpRule.Pattern.Custom(__v))
    def withBody(__v: _root_.scala.Predef.String): HttpRule = copy(body = __v)
    def clearAdditionalBindings = copy(additionalBindings = _root_.scala.Seq.empty)
    def addAdditionalBindings(__vs: com.google.api.HttpRule*): HttpRule = addAllAdditionalBindings(__vs)
    def addAllAdditionalBindings(__vs: Iterable[com.google.api.HttpRule]): HttpRule = copy(additionalBindings = additionalBindings ++ __vs)
    def withAdditionalBindings(__v: _root_.scala.Seq[com.google.api.HttpRule]): HttpRule = copy(additionalBindings = __v)
    def clearPattern: HttpRule = copy(pattern = com.google.api.HttpRule.Pattern.Empty)
    def withPattern(__v: com.google.api.HttpRule.Pattern): HttpRule = copy(pattern = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = selector
          if (__t != "") __t else null
        }
        case 2 => pattern.get.orNull
        case 3 => pattern.put.orNull
        case 4 => pattern.post.orNull
        case 5 => pattern.delete.orNull
        case 6 => pattern.patch.orNull
        case 8 => pattern.custom.orNull
        case 7 => {
          val __t = body
          if (__t != "") __t else null
        }
        case 11 => additionalBindings
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(selector)
        case 2 => pattern.get.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => pattern.put.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => pattern.post.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => pattern.delete.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => pattern.patch.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => pattern.custom.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => _root_.scalapb.descriptors.PString(body)
        case 11 => _root_.scalapb.descriptors.PRepeated(additionalBindings.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.api.HttpRule
}

object HttpRule extends scalapb.GeneratedMessageCompanion[com.google.api.HttpRule] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.api.HttpRule] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.api.HttpRule = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.api.HttpRule(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(7), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(8), Nil).asInstanceOf[_root_.scala.Seq[com.google.api.HttpRule]],
      pattern = __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(com.google.api.HttpRule.Pattern.Get)
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(com.google.api.HttpRule.Pattern.Put))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(com.google.api.HttpRule.Pattern.Post))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(__fields.get(4)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(com.google.api.HttpRule.Pattern.Delete))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(__fields.get(5)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(com.google.api.HttpRule.Pattern.Patch))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(__fields.get(6)).asInstanceOf[_root_.scala.Option[com.google.api.CustomHttpPattern]].map(com.google.api.HttpRule.Pattern.Custom))
    .getOrElse(com.google.api.HttpRule.Pattern.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.api.HttpRule] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.api.HttpRule(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Seq[com.google.api.HttpRule]]).getOrElse(_root_.scala.Seq.empty),
        pattern = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.google.api.HttpRule.Pattern.Get)
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.google.api.HttpRule.Pattern.Put))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.google.api.HttpRule.Pattern.Post))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.google.api.HttpRule.Pattern.Delete))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.google.api.HttpRule.Pattern.Patch))
    .orElse[com.google.api.HttpRule.Pattern](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.google.api.CustomHttpPattern]]).map(com.google.api.HttpRule.Pattern.Custom))
    .getOrElse(com.google.api.HttpRule.Pattern.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = HttpProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = HttpProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 8 => __out = com.google.api.CustomHttpPattern
      case 11 => __out = com.google.api.HttpRule
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.api.HttpRule(
    selector = "",
    body = "",
    additionalBindings = _root_.scala.Seq.empty,
    pattern = com.google.api.HttpRule.Pattern.Empty
  )
  sealed trait Pattern extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isGet: _root_.scala.Boolean = false
    def isPut: _root_.scala.Boolean = false
    def isPost: _root_.scala.Boolean = false
    def isDelete: _root_.scala.Boolean = false
    def isPatch: _root_.scala.Boolean = false
    def isCustom: _root_.scala.Boolean = false
    def get: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def put: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def post: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def delete: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def patch: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def custom: _root_.scala.Option[com.google.api.CustomHttpPattern] = _root_.scala.None
  }
  object Pattern extends {
    @SerialVersionUID(0L)
    case object Empty extends com.google.api.HttpRule.Pattern {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Get(value: _root_.scala.Predef.String) extends com.google.api.HttpRule.Pattern {
      type ValueType = _root_.scala.Predef.String
      override def isGet: _root_.scala.Boolean = true
      override def get: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class Put(value: _root_.scala.Predef.String) extends com.google.api.HttpRule.Pattern {
      type ValueType = _root_.scala.Predef.String
      override def isPut: _root_.scala.Boolean = true
      override def put: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class Post(value: _root_.scala.Predef.String) extends com.google.api.HttpRule.Pattern {
      type ValueType = _root_.scala.Predef.String
      override def isPost: _root_.scala.Boolean = true
      override def post: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Delete(value: _root_.scala.Predef.String) extends com.google.api.HttpRule.Pattern {
      type ValueType = _root_.scala.Predef.String
      override def isDelete: _root_.scala.Boolean = true
      override def delete: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class Patch(value: _root_.scala.Predef.String) extends com.google.api.HttpRule.Pattern {
      type ValueType = _root_.scala.Predef.String
      override def isPatch: _root_.scala.Boolean = true
      override def patch: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class Custom(value: com.google.api.CustomHttpPattern) extends com.google.api.HttpRule.Pattern {
      type ValueType = com.google.api.CustomHttpPattern
      override def isCustom: _root_.scala.Boolean = true
      override def custom: _root_.scala.Option[com.google.api.CustomHttpPattern] = Some(value)
      override def number: _root_.scala.Int = 8
    }
  }
  implicit class HttpRuleLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.api.HttpRule]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.api.HttpRule](_l) {
    def selector: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.selector)((c_, f_) => c_.copy(selector = f_))
    def get: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getGet)((c_, f_) => c_.copy(pattern = com.google.api.HttpRule.Pattern.Get(f_)))
    def put: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPut)((c_, f_) => c_.copy(pattern = com.google.api.HttpRule.Pattern.Put(f_)))
    def post: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPost)((c_, f_) => c_.copy(pattern = com.google.api.HttpRule.Pattern.Post(f_)))
    def delete: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getDelete)((c_, f_) => c_.copy(pattern = com.google.api.HttpRule.Pattern.Delete(f_)))
    def patch: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPatch)((c_, f_) => c_.copy(pattern = com.google.api.HttpRule.Pattern.Patch(f_)))
    def custom: _root_.scalapb.lenses.Lens[UpperPB, com.google.api.CustomHttpPattern] = field(_.getCustom)((c_, f_) => c_.copy(pattern = com.google.api.HttpRule.Pattern.Custom(f_)))
    def body: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.body)((c_, f_) => c_.copy(body = f_))
    def additionalBindings: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.api.HttpRule]] = field(_.additionalBindings)((c_, f_) => c_.copy(additionalBindings = f_))
    def pattern: _root_.scalapb.lenses.Lens[UpperPB, com.google.api.HttpRule.Pattern] = field(_.pattern)((c_, f_) => c_.copy(pattern = f_))
  }
  final val SELECTOR_FIELD_NUMBER = 1
  final val GET_FIELD_NUMBER = 2
  final val PUT_FIELD_NUMBER = 3
  final val POST_FIELD_NUMBER = 4
  final val DELETE_FIELD_NUMBER = 5
  final val PATCH_FIELD_NUMBER = 6
  final val CUSTOM_FIELD_NUMBER = 8
  final val BODY_FIELD_NUMBER = 7
  final val ADDITIONAL_BINDINGS_FIELD_NUMBER = 11
  def of(
    selector: _root_.scala.Predef.String,
    body: _root_.scala.Predef.String,
    additionalBindings: _root_.scala.Seq[com.google.api.HttpRule],
    pattern: com.google.api.HttpRule.Pattern
  ): _root_.com.google.api.HttpRule = _root_.com.google.api.HttpRule(
    selector,
    body,
    additionalBindings,
    pattern
  )
}
