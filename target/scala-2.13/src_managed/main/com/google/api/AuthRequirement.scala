// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.api

/** User-defined authentication requirements, including support for
  * [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
  *
  * @param providerId
  *   [id][google.api.AuthProvider.id] from authentication provider.
  *  
  *   Example:
  *  
  *       provider_id: bookstore_auth
  * @param audiences
  *   NOTE: This will be deprecated soon, once AuthProvider.audiences is
  *   implemented and accepted in all the runtime components.
  *  
  *   The list of JWT
  *   [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
  *   that are allowed to access. A JWT containing any of these audiences will
  *   be accepted. When this setting is absent, only JWTs with audience
  *   "https://[Service_name][google.api.Service.name]/[API_name][google.protobuf.Api.name]"
  *   will be accepted. For example, if no audiences are in the setting,
  *   LibraryService API will only accept JWTs with the following audience
  *   "https://library-example.googleapis.com/google.example.library.v1.LibraryService".
  *  
  *   Example:
  *  
  *       audiences: bookstore_android.apps.googleusercontent.com,
  *                  bookstore_web.apps.googleusercontent.com
  */
@SerialVersionUID(0L)
final case class AuthRequirement(
    providerId: _root_.scala.Predef.String = "",
    audiences: _root_.scala.Predef.String = ""
    ) extends scalapb.GeneratedMessage with scalapb.Message[AuthRequirement] with scalapb.lenses.Updatable[AuthRequirement] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = providerId
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = audiences
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = providerId
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = audiences
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.api.AuthRequirement = {
      var __providerId = this.providerId
      var __audiences = this.audiences
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __providerId = _input__.readString()
          case 18 =>
            __audiences = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.google.api.AuthRequirement(
          providerId = __providerId,
          audiences = __audiences
      )
    }
    def withProviderId(__v: _root_.scala.Predef.String): AuthRequirement = copy(providerId = __v)
    def withAudiences(__v: _root_.scala.Predef.String): AuthRequirement = copy(audiences = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = providerId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = audiences
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(providerId)
        case 2 => _root_.scalapb.descriptors.PString(audiences)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.api.AuthRequirement
}

object AuthRequirement extends scalapb.GeneratedMessageCompanion[com.google.api.AuthRequirement] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.api.AuthRequirement] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.api.AuthRequirement = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.api.AuthRequirement(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.api.AuthRequirement] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.api.AuthRequirement(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AuthProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AuthProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.api.AuthRequirement(
    providerId = "",
    audiences = ""
  )
  implicit class AuthRequirementLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.api.AuthRequirement]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.api.AuthRequirement](_l) {
    def providerId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.providerId)((c_, f_) => c_.copy(providerId = f_))
    def audiences: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.audiences)((c_, f_) => c_.copy(audiences = f_))
  }
  final val PROVIDER_ID_FIELD_NUMBER = 1
  final val AUDIENCES_FIELD_NUMBER = 2
  def of(
    providerId: _root_.scala.Predef.String,
    audiences: _root_.scala.Predef.String
  ): _root_.com.google.api.AuthRequirement = _root_.com.google.api.AuthRequirement(
    providerId,
    audiences
  )
}
