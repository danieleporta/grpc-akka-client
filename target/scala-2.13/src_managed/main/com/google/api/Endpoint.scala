// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.api

/** `Endpoint` describes a network endpoint that serves a set of APIs.
  * A service may expose any number of endpoints, and all endpoints share the
  * same service configuration, such as quota configuration and monitoring
  * configuration.
  *
  * Example service configuration:
  *
  *     name: library-example.googleapis.com
  *     endpoints:
  *       # Below entry makes 'google.example.library.v1.Library'
  *       # API be served from endpoint address library-example.googleapis.com.
  *       # It also allows HTTP OPTIONS calls to be passed to the backend, for
  *       # it to decide whether the subsequent cross-origin request is
  *       # allowed to proceed.
  *     - name: library-example.googleapis.com
  *       allow_cors: true
  *
  * @param name
  *   The canonical name of this endpoint.
  * @param aliases
  *   DEPRECATED: This field is no longer supported. Instead of using aliases,
  *   please specify multiple [google.api.Endpoint][google.api.Endpoint] for each of the intended
  *   aliases.
  *  
  *   Additional names that this endpoint will be hosted on.
  * @param features
  *   The list of features enabled on this endpoint.
  * @param target
  *   The specification of an Internet routable address of API frontend that will
  *   handle requests to this [API Endpoint](https://cloud.google.com/apis/design/glossary).
  *   It should be either a valid IPv4 address or a fully-qualified domain name.
  *   For example, "8.8.8.8" or "myservice.appspot.com".
  * @param allowCors
  *   Allowing
  *   [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing), aka
  *   cross-domain traffic, would allow the backends served from this endpoint to
  *   receive and respond to HTTP OPTIONS requests. The response will be used by
  *   the browser to determine whether the subsequent cross-origin request is
  *   allowed to proceed.
  */
@SerialVersionUID(0L)
final case class Endpoint(
    name: _root_.scala.Predef.String = "",
    aliases: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    features: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    target: _root_.scala.Predef.String = "",
    allowCors: _root_.scala.Boolean = false
    ) extends scalapb.GeneratedMessage with scalapb.Message[Endpoint] with scalapb.lenses.Updatable[Endpoint] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      aliases.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      features.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      }
      
      {
        val __value = target
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(101, __value)
        }
      };
      
      {
        val __value = allowCors
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      aliases.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      features.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      {
        val __v = allowCors
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      {
        val __v = target
        if (__v != "") {
          _output__.writeString(101, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.api.Endpoint = {
      var __name = this.name
      val __aliases = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.scala.Predef.String] ++= this.aliases)
      val __features = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.scala.Predef.String] ++= this.features)
      var __target = this.target
      var __allowCors = this.allowCors
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readString()
          case 18 =>
            __aliases += _input__.readString()
          case 34 =>
            __features += _input__.readString()
          case 810 =>
            __target = _input__.readString()
          case 40 =>
            __allowCors = _input__.readBool()
          case tag => _input__.skipField(tag)
        }
      }
      com.google.api.Endpoint(
          name = __name,
          aliases = __aliases.result(),
          features = __features.result(),
          target = __target,
          allowCors = __allowCors
      )
    }
    def withName(__v: _root_.scala.Predef.String): Endpoint = copy(name = __v)
    def clearAliases = copy(aliases = _root_.scala.Seq.empty)
    def addAliases(__vs: _root_.scala.Predef.String*): Endpoint = addAllAliases(__vs)
    def addAllAliases(__vs: Iterable[_root_.scala.Predef.String]): Endpoint = copy(aliases = aliases ++ __vs)
    def withAliases(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Endpoint = copy(aliases = __v)
    def clearFeatures = copy(features = _root_.scala.Seq.empty)
    def addFeatures(__vs: _root_.scala.Predef.String*): Endpoint = addAllFeatures(__vs)
    def addAllFeatures(__vs: Iterable[_root_.scala.Predef.String]): Endpoint = copy(features = features ++ __vs)
    def withFeatures(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Endpoint = copy(features = __v)
    def withTarget(__v: _root_.scala.Predef.String): Endpoint = copy(target = __v)
    def withAllowCors(__v: _root_.scala.Boolean): Endpoint = copy(allowCors = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => aliases
        case 4 => features
        case 101 => {
          val __t = target
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = allowCors
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PRepeated(aliases.iterator.map(_root_.scalapb.descriptors.PString).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(features.iterator.map(_root_.scalapb.descriptors.PString).toVector)
        case 101 => _root_.scalapb.descriptors.PString(target)
        case 5 => _root_.scalapb.descriptors.PBoolean(allowCors)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.api.Endpoint
}

object Endpoint extends scalapb.GeneratedMessageCompanion[com.google.api.Endpoint] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.api.Endpoint] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.api.Endpoint = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.api.Endpoint(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[_root_.scala.Seq[_root_.scala.Predef.String]],
      __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.Seq[_root_.scala.Predef.String]],
      __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(4), false).asInstanceOf[_root_.scala.Boolean]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.api.Endpoint] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.api.Endpoint(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(101).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = EndpointProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = EndpointProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.api.Endpoint(
    name = "",
    aliases = _root_.scala.Seq.empty,
    features = _root_.scala.Seq.empty,
    target = "",
    allowCors = false
  )
  implicit class EndpointLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.api.Endpoint]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.api.Endpoint](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def aliases: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.aliases)((c_, f_) => c_.copy(aliases = f_))
    def features: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.features)((c_, f_) => c_.copy(features = f_))
    def target: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.target)((c_, f_) => c_.copy(target = f_))
    def allowCors: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.allowCors)((c_, f_) => c_.copy(allowCors = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val ALIASES_FIELD_NUMBER = 2
  final val FEATURES_FIELD_NUMBER = 4
  final val TARGET_FIELD_NUMBER = 101
  final val ALLOW_CORS_FIELD_NUMBER = 5
  def of(
    name: _root_.scala.Predef.String,
    aliases: _root_.scala.Seq[_root_.scala.Predef.String],
    features: _root_.scala.Seq[_root_.scala.Predef.String],
    target: _root_.scala.Predef.String,
    allowCors: _root_.scala.Boolean
  ): _root_.com.google.api.Endpoint = _root_.com.google.api.Endpoint(
    name,
    aliases,
    features,
    target,
    allowCors
  )
}
