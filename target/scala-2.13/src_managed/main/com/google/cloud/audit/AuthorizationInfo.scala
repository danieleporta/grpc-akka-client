// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.cloud.audit

/** Authorization information for the operation.
  *
  * @param resource
  *   The resource being accessed, as a REST-style string. For example:
  *  
  *       bigquery.googlapis.com/projects/PROJECTID/datasets/DATASETID
  * @param permission
  *   The required IAM permission.
  * @param granted
  *   Whether or not authorization for `resource` and `permission`
  *   was granted.
  */
@SerialVersionUID(0L)
final case class AuthorizationInfo(
    resource: _root_.scala.Predef.String = "",
    permission: _root_.scala.Predef.String = "",
    granted: _root_.scala.Boolean = false
    ) extends scalapb.GeneratedMessage with scalapb.Message[AuthorizationInfo] with scalapb.lenses.Updatable[AuthorizationInfo] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = resource
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = permission
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = granted
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = resource
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = permission
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = granted
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.cloud.audit.AuthorizationInfo = {
      var __resource = this.resource
      var __permission = this.permission
      var __granted = this.granted
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __resource = _input__.readString()
          case 18 =>
            __permission = _input__.readString()
          case 24 =>
            __granted = _input__.readBool()
          case tag => _input__.skipField(tag)
        }
      }
      com.google.cloud.audit.AuthorizationInfo(
          resource = __resource,
          permission = __permission,
          granted = __granted
      )
    }
    def withResource(__v: _root_.scala.Predef.String): AuthorizationInfo = copy(resource = __v)
    def withPermission(__v: _root_.scala.Predef.String): AuthorizationInfo = copy(permission = __v)
    def withGranted(__v: _root_.scala.Boolean): AuthorizationInfo = copy(granted = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = resource
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = permission
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = granted
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(resource)
        case 2 => _root_.scalapb.descriptors.PString(permission)
        case 3 => _root_.scalapb.descriptors.PBoolean(granted)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.cloud.audit.AuthorizationInfo
}

object AuthorizationInfo extends scalapb.GeneratedMessageCompanion[com.google.cloud.audit.AuthorizationInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.cloud.audit.AuthorizationInfo] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.cloud.audit.AuthorizationInfo = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.cloud.audit.AuthorizationInfo(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(2), false).asInstanceOf[_root_.scala.Boolean]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.cloud.audit.AuthorizationInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.cloud.audit.AuthorizationInfo(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AuditLogProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AuditLogProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.cloud.audit.AuthorizationInfo(
    resource = "",
    permission = "",
    granted = false
  )
  implicit class AuthorizationInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.cloud.audit.AuthorizationInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.cloud.audit.AuthorizationInfo](_l) {
    def resource: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.resource)((c_, f_) => c_.copy(resource = f_))
    def permission: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.permission)((c_, f_) => c_.copy(permission = f_))
    def granted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.granted)((c_, f_) => c_.copy(granted = f_))
  }
  final val RESOURCE_FIELD_NUMBER = 1
  final val PERMISSION_FIELD_NUMBER = 2
  final val GRANTED_FIELD_NUMBER = 3
  def of(
    resource: _root_.scala.Predef.String,
    permission: _root_.scala.Predef.String,
    granted: _root_.scala.Boolean
  ): _root_.com.google.cloud.audit.AuthorizationInfo = _root_.com.google.cloud.audit.AuthorizationInfo(
    resource,
    permission,
    granted
  )
}
