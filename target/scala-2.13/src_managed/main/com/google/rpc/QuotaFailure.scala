// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.rpc

/** Describes how a quota check failed.
  *
  * For example if a daily limit was exceeded for the calling project,
  * a service could respond with a QuotaFailure detail containing the project
  * id and the description of the quota limit that was exceeded.  If the
  * calling project hasn't enabled the service in the developer console, then
  * a service could respond with the project id and set `service_disabled`
  * to true.
  *
  * Also see RetryDetail and Help types for other details about handling a
  * quota failure.
  *
  * @param violations
  *   Describes all quota violations.
  */
@SerialVersionUID(0L)
final case class QuotaFailure(
    violations: _root_.scala.Seq[com.google.rpc.QuotaFailure.Violation] = _root_.scala.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[QuotaFailure] with scalapb.lenses.Updatable[QuotaFailure] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      violations.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      violations.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.rpc.QuotaFailure = {
      val __violations = (_root_.scala.collection.immutable.Vector.newBuilder[com.google.rpc.QuotaFailure.Violation] ++= this.violations)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __violations += _root_.scalapb.LiteParser.readMessage(_input__, com.google.rpc.QuotaFailure.Violation.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      com.google.rpc.QuotaFailure(
          violations = __violations.result()
      )
    }
    def clearViolations = copy(violations = _root_.scala.Seq.empty)
    def addViolations(__vs: com.google.rpc.QuotaFailure.Violation*): QuotaFailure = addAllViolations(__vs)
    def addAllViolations(__vs: Iterable[com.google.rpc.QuotaFailure.Violation]): QuotaFailure = copy(violations = violations ++ __vs)
    def withViolations(__v: _root_.scala.Seq[com.google.rpc.QuotaFailure.Violation]): QuotaFailure = copy(violations = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => violations
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(violations.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.rpc.QuotaFailure
}

object QuotaFailure extends scalapb.GeneratedMessageCompanion[com.google.rpc.QuotaFailure] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.rpc.QuotaFailure] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.rpc.QuotaFailure = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.rpc.QuotaFailure(
      __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.Seq[com.google.rpc.QuotaFailure.Violation]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.rpc.QuotaFailure] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.rpc.QuotaFailure(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[com.google.rpc.QuotaFailure.Violation]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ErrorDetailsProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ErrorDetailsProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.rpc.QuotaFailure.Violation
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.google.rpc.QuotaFailure.Violation
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.rpc.QuotaFailure(
    violations = _root_.scala.Seq.empty
  )
  /** A message type used to describe a single quota violation.  For example, a
    * daily quota or a custom quota that was exceeded.
    *
    * @param subject
    *   The subject on which the quota check failed.
    *   For example, "clientip:&lt;ip address of client&gt;" or "project:&lt;Google
    *   developer project id&gt;".
    * @param description
    *   A description of how the quota check failed. Clients can use this
    *   description to find more about the quota configuration in the service's
    *   public documentation, or find the relevant quota limit to adjust through
    *   developer console.
    *  
    *   For example: "Service disabled" or "Daily Limit for read operations
    *   exceeded".
    */
  @SerialVersionUID(0L)
  final case class Violation(
      subject: _root_.scala.Predef.String = "",
      description: _root_.scala.Predef.String = ""
      ) extends scalapb.GeneratedMessage with scalapb.Message[Violation] with scalapb.lenses.Updatable[Violation] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = subject
          if (__value != "") {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = description
          if (__value != "") {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = subject
          if (__v != "") {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = description
          if (__v != "") {
            _output__.writeString(2, __v)
          }
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.rpc.QuotaFailure.Violation = {
        var __subject = this.subject
        var __description = this.description
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __subject = _input__.readString()
            case 18 =>
              __description = _input__.readString()
            case tag => _input__.skipField(tag)
          }
        }
        com.google.rpc.QuotaFailure.Violation(
            subject = __subject,
            description = __description
        )
      }
      def withSubject(__v: _root_.scala.Predef.String): Violation = copy(subject = __v)
      def withDescription(__v: _root_.scala.Predef.String): Violation = copy(description = __v)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = subject
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = description
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(subject)
          case 2 => _root_.scalapb.descriptors.PString(description)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.google.rpc.QuotaFailure.Violation
  }
  
  object Violation extends scalapb.GeneratedMessageCompanion[com.google.rpc.QuotaFailure.Violation] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.rpc.QuotaFailure.Violation] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.rpc.QuotaFailure.Violation = {
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.google.rpc.QuotaFailure.Violation(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.rpc.QuotaFailure.Violation] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.google.rpc.QuotaFailure.Violation(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.google.rpc.QuotaFailure.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.google.rpc.QuotaFailure.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.google.rpc.QuotaFailure.Violation(
      subject = "",
      description = ""
    )
    implicit class ViolationLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.rpc.QuotaFailure.Violation]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.rpc.QuotaFailure.Violation](_l) {
      def subject: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.subject)((c_, f_) => c_.copy(subject = f_))
      def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    }
    final val SUBJECT_FIELD_NUMBER = 1
    final val DESCRIPTION_FIELD_NUMBER = 2
    def of(
      subject: _root_.scala.Predef.String,
      description: _root_.scala.Predef.String
    ): _root_.com.google.rpc.QuotaFailure.Violation = _root_.com.google.rpc.QuotaFailure.Violation(
      subject,
      description
    )
  }
  
  implicit class QuotaFailureLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.rpc.QuotaFailure]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.rpc.QuotaFailure](_l) {
    def violations: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.rpc.QuotaFailure.Violation]] = field(_.violations)((c_, f_) => c_.copy(violations = f_))
  }
  final val VIOLATIONS_FIELD_NUMBER = 1
  def of(
    violations: _root_.scala.Seq[com.google.rpc.QuotaFailure.Violation]
  ): _root_.com.google.rpc.QuotaFailure = _root_.com.google.rpc.QuotaFailure(
    violations
  )
}
