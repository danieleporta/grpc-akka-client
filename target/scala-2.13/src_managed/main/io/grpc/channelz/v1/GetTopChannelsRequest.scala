// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.grpc.channelz.v1

/** @param startChannelId
  *   start_channel_id indicates that only channels at or above this id should be
  *   included in the results.
  *   To request the first page, this should be set to 0. To request
  *   subsequent pages, the client generates this value by adding 1 to
  *   the highest seen result ID.
  * @param maxResults
  *   If non-zero, the server will return a page of results containing
  *   at most this many items. If zero, the server will choose a
  *   reasonable page size.  Must never be negative.
  */
@SerialVersionUID(0L)
final case class GetTopChannelsRequest(
    startChannelId: _root_.scala.Long = 0L,
    maxResults: _root_.scala.Long = 0L
    ) extends scalapb.GeneratedMessage with scalapb.Message[GetTopChannelsRequest] with scalapb.lenses.Updatable[GetTopChannelsRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = startChannelId
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = maxResults
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = startChannelId
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = maxResults
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.GetTopChannelsRequest = {
      var __startChannelId = this.startChannelId
      var __maxResults = this.maxResults
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __startChannelId = _input__.readInt64()
          case 16 =>
            __maxResults = _input__.readInt64()
          case tag => _input__.skipField(tag)
        }
      }
      io.grpc.channelz.v1.GetTopChannelsRequest(
          startChannelId = __startChannelId,
          maxResults = __maxResults
      )
    }
    def withStartChannelId(__v: _root_.scala.Long): GetTopChannelsRequest = copy(startChannelId = __v)
    def withMaxResults(__v: _root_.scala.Long): GetTopChannelsRequest = copy(maxResults = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = startChannelId
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = maxResults
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(startChannelId)
        case 2 => _root_.scalapb.descriptors.PLong(maxResults)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = io.grpc.channelz.v1.GetTopChannelsRequest
}

object GetTopChannelsRequest extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.GetTopChannelsRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.GetTopChannelsRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.GetTopChannelsRequest = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    io.grpc.channelz.v1.GetTopChannelsRequest(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(1), 0L).asInstanceOf[_root_.scala.Long]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.GetTopChannelsRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      io.grpc.channelz.v1.GetTopChannelsRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ChannelzProto.javaDescriptor.getMessageTypes.get(20)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ChannelzProto.scalaDescriptor.messages(20)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.grpc.channelz.v1.GetTopChannelsRequest(
    startChannelId = 0L,
    maxResults = 0L
  )
  implicit class GetTopChannelsRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.GetTopChannelsRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.GetTopChannelsRequest](_l) {
    def startChannelId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.startChannelId)((c_, f_) => c_.copy(startChannelId = f_))
    def maxResults: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.maxResults)((c_, f_) => c_.copy(maxResults = f_))
  }
  final val START_CHANNEL_ID_FIELD_NUMBER = 1
  final val MAX_RESULTS_FIELD_NUMBER = 2
  def of(
    startChannelId: _root_.scala.Long,
    maxResults: _root_.scala.Long
  ): _root_.io.grpc.channelz.v1.GetTopChannelsRequest = _root_.io.grpc.channelz.v1.GetTopChannelsRequest(
    startChannelId,
    maxResults
  )
}
