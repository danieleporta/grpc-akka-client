// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.grpc.channelz.v1

/** SocketData is data associated for a specific Socket.  The fields present
  * are specific to the implementation, so there may be minor differences in
  * the semantics.  (e.g. flow control windows)
  *
  * @param streamsStarted
  *   The number of streams that have been started.
  * @param streamsSucceeded
  *   The number of streams that have ended successfully:
  *   On client side, received frame with eos bit set;
  *   On server side, sent frame with eos bit set.
  * @param streamsFailed
  *   The number of streams that have ended unsuccessfully:
  *   On client side, ended without receiving frame with eos bit set;
  *   On server side, ended without sending frame with eos bit set.
  * @param messagesSent
  *   The number of grpc messages successfully sent on this socket.
  * @param messagesReceived
  *   The number of grpc messages received on this socket.
  * @param keepAlivesSent
  *   The number of keep alives sent.  This is typically implemented with HTTP/2
  *   ping messages.
  * @param lastLocalStreamCreatedTimestamp
  *   The last time a stream was created by this endpoint.  Usually unset for
  *   servers.
  * @param lastRemoteStreamCreatedTimestamp
  *   The last time a stream was created by the remote endpoint.  Usually unset
  *   for clients.
  * @param lastMessageSentTimestamp
  *   The last time a message was sent by this endpoint.
  * @param lastMessageReceivedTimestamp
  *   The last time a message was received by this endpoint.
  * @param localFlowControlWindow
  *   The amount of window, granted to the local endpoint by the remote endpoint.
  *   This may be slightly out of date due to network latency.  This does NOT
  *   include stream level or TCP level flow control info.
  * @param remoteFlowControlWindow
  *   The amount of window, granted to the remote endpoint by the local endpoint.
  *   This may be slightly out of date due to network latency.  This does NOT
  *   include stream level or TCP level flow control info.
  * @param option
  *   Socket options set on this socket.  May be absent if 'summary' is set
  *   on GetSocketRequest.
  */
@SerialVersionUID(0L)
final case class SocketData(
    streamsStarted: _root_.scala.Long = 0L,
    streamsSucceeded: _root_.scala.Long = 0L,
    streamsFailed: _root_.scala.Long = 0L,
    messagesSent: _root_.scala.Long = 0L,
    messagesReceived: _root_.scala.Long = 0L,
    keepAlivesSent: _root_.scala.Long = 0L,
    lastLocalStreamCreatedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    lastRemoteStreamCreatedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    lastMessageSentTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    lastMessageReceivedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    localFlowControlWindow: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    remoteFlowControlWindow: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    option: _root_.scala.Seq[io.grpc.channelz.v1.SocketOption] = _root_.scala.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[SocketData] with scalapb.lenses.Updatable[SocketData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = streamsStarted
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = streamsSucceeded
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      
      {
        val __value = streamsFailed
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = messagesSent
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      
      {
        val __value = messagesReceived
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, __value)
        }
      };
      
      {
        val __value = keepAlivesSent
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(6, __value)
        }
      };
      if (lastLocalStreamCreatedTimestamp.isDefined) {
        val __value = lastLocalStreamCreatedTimestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (lastRemoteStreamCreatedTimestamp.isDefined) {
        val __value = lastRemoteStreamCreatedTimestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (lastMessageSentTimestamp.isDefined) {
        val __value = lastMessageSentTimestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (lastMessageReceivedTimestamp.isDefined) {
        val __value = lastMessageReceivedTimestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (localFlowControlWindow.isDefined) {
        val __value = io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toBase(localFlowControlWindow.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (remoteFlowControlWindow.isDefined) {
        val __value = io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toBase(remoteFlowControlWindow.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      option.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = streamsStarted
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = streamsSucceeded
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      {
        val __v = streamsFailed
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = messagesSent
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      {
        val __v = messagesReceived
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      {
        val __v = keepAlivesSent
        if (__v != 0L) {
          _output__.writeInt64(6, __v)
        }
      };
      lastLocalStreamCreatedTimestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      lastRemoteStreamCreatedTimestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      lastMessageSentTimestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      lastMessageReceivedTimestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      localFlowControlWindow.foreach { __v =>
        val __m = io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toBase(__v)
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      remoteFlowControlWindow.foreach { __v =>
        val __m = io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toBase(__v)
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      option.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.SocketData = {
      var __streamsStarted = this.streamsStarted
      var __streamsSucceeded = this.streamsSucceeded
      var __streamsFailed = this.streamsFailed
      var __messagesSent = this.messagesSent
      var __messagesReceived = this.messagesReceived
      var __keepAlivesSent = this.keepAlivesSent
      var __lastLocalStreamCreatedTimestamp = this.lastLocalStreamCreatedTimestamp
      var __lastRemoteStreamCreatedTimestamp = this.lastRemoteStreamCreatedTimestamp
      var __lastMessageSentTimestamp = this.lastMessageSentTimestamp
      var __lastMessageReceivedTimestamp = this.lastMessageReceivedTimestamp
      var __localFlowControlWindow = this.localFlowControlWindow
      var __remoteFlowControlWindow = this.remoteFlowControlWindow
      val __option = (_root_.scala.collection.immutable.Vector.newBuilder[io.grpc.channelz.v1.SocketOption] ++= this.option)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __streamsStarted = _input__.readInt64()
          case 16 =>
            __streamsSucceeded = _input__.readInt64()
          case 24 =>
            __streamsFailed = _input__.readInt64()
          case 32 =>
            __messagesSent = _input__.readInt64()
          case 40 =>
            __messagesReceived = _input__.readInt64()
          case 48 =>
            __keepAlivesSent = _input__.readInt64()
          case 58 =>
            __lastLocalStreamCreatedTimestamp = Option(_root_.scalapb.LiteParser.readMessage(_input__, __lastLocalStreamCreatedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)))
          case 66 =>
            __lastRemoteStreamCreatedTimestamp = Option(_root_.scalapb.LiteParser.readMessage(_input__, __lastRemoteStreamCreatedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)))
          case 74 =>
            __lastMessageSentTimestamp = Option(_root_.scalapb.LiteParser.readMessage(_input__, __lastMessageSentTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)))
          case 82 =>
            __lastMessageReceivedTimestamp = Option(_root_.scalapb.LiteParser.readMessage(_input__, __lastMessageReceivedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)))
          case 90 =>
            __localFlowControlWindow = Option(io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toCustom(_root_.scalapb.LiteParser.readMessage(_input__, __localFlowControlWindow.map(io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toBase).getOrElse(com.google.protobuf.wrappers.Int64Value.defaultInstance))))
          case 98 =>
            __remoteFlowControlWindow = Option(io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toCustom(_root_.scalapb.LiteParser.readMessage(_input__, __remoteFlowControlWindow.map(io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toBase).getOrElse(com.google.protobuf.wrappers.Int64Value.defaultInstance))))
          case 106 =>
            __option += _root_.scalapb.LiteParser.readMessage(_input__, io.grpc.channelz.v1.SocketOption.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      io.grpc.channelz.v1.SocketData(
          streamsStarted = __streamsStarted,
          streamsSucceeded = __streamsSucceeded,
          streamsFailed = __streamsFailed,
          messagesSent = __messagesSent,
          messagesReceived = __messagesReceived,
          keepAlivesSent = __keepAlivesSent,
          lastLocalStreamCreatedTimestamp = __lastLocalStreamCreatedTimestamp,
          lastRemoteStreamCreatedTimestamp = __lastRemoteStreamCreatedTimestamp,
          lastMessageSentTimestamp = __lastMessageSentTimestamp,
          lastMessageReceivedTimestamp = __lastMessageReceivedTimestamp,
          localFlowControlWindow = __localFlowControlWindow,
          remoteFlowControlWindow = __remoteFlowControlWindow,
          option = __option.result()
      )
    }
    def withStreamsStarted(__v: _root_.scala.Long): SocketData = copy(streamsStarted = __v)
    def withStreamsSucceeded(__v: _root_.scala.Long): SocketData = copy(streamsSucceeded = __v)
    def withStreamsFailed(__v: _root_.scala.Long): SocketData = copy(streamsFailed = __v)
    def withMessagesSent(__v: _root_.scala.Long): SocketData = copy(messagesSent = __v)
    def withMessagesReceived(__v: _root_.scala.Long): SocketData = copy(messagesReceived = __v)
    def withKeepAlivesSent(__v: _root_.scala.Long): SocketData = copy(keepAlivesSent = __v)
    def getLastLocalStreamCreatedTimestamp: com.google.protobuf.timestamp.Timestamp = lastLocalStreamCreatedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearLastLocalStreamCreatedTimestamp: SocketData = copy(lastLocalStreamCreatedTimestamp = _root_.scala.None)
    def withLastLocalStreamCreatedTimestamp(__v: com.google.protobuf.timestamp.Timestamp): SocketData = copy(lastLocalStreamCreatedTimestamp = Option(__v))
    def getLastRemoteStreamCreatedTimestamp: com.google.protobuf.timestamp.Timestamp = lastRemoteStreamCreatedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearLastRemoteStreamCreatedTimestamp: SocketData = copy(lastRemoteStreamCreatedTimestamp = _root_.scala.None)
    def withLastRemoteStreamCreatedTimestamp(__v: com.google.protobuf.timestamp.Timestamp): SocketData = copy(lastRemoteStreamCreatedTimestamp = Option(__v))
    def getLastMessageSentTimestamp: com.google.protobuf.timestamp.Timestamp = lastMessageSentTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearLastMessageSentTimestamp: SocketData = copy(lastMessageSentTimestamp = _root_.scala.None)
    def withLastMessageSentTimestamp(__v: com.google.protobuf.timestamp.Timestamp): SocketData = copy(lastMessageSentTimestamp = Option(__v))
    def getLastMessageReceivedTimestamp: com.google.protobuf.timestamp.Timestamp = lastMessageReceivedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearLastMessageReceivedTimestamp: SocketData = copy(lastMessageReceivedTimestamp = _root_.scala.None)
    def withLastMessageReceivedTimestamp(__v: com.google.protobuf.timestamp.Timestamp): SocketData = copy(lastMessageReceivedTimestamp = Option(__v))
    def getLocalFlowControlWindow: _root_.scala.Long = localFlowControlWindow.getOrElse(io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toCustom(com.google.protobuf.wrappers.Int64Value.defaultInstance))
    def clearLocalFlowControlWindow: SocketData = copy(localFlowControlWindow = _root_.scala.None)
    def withLocalFlowControlWindow(__v: _root_.scala.Long): SocketData = copy(localFlowControlWindow = Option(__v))
    def getRemoteFlowControlWindow: _root_.scala.Long = remoteFlowControlWindow.getOrElse(io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toCustom(com.google.protobuf.wrappers.Int64Value.defaultInstance))
    def clearRemoteFlowControlWindow: SocketData = copy(remoteFlowControlWindow = _root_.scala.None)
    def withRemoteFlowControlWindow(__v: _root_.scala.Long): SocketData = copy(remoteFlowControlWindow = Option(__v))
    def clearOption = copy(option = _root_.scala.Seq.empty)
    def addOption(__vs: io.grpc.channelz.v1.SocketOption*): SocketData = addAllOption(__vs)
    def addAllOption(__vs: Iterable[io.grpc.channelz.v1.SocketOption]): SocketData = copy(option = option ++ __vs)
    def withOption(__v: _root_.scala.Seq[io.grpc.channelz.v1.SocketOption]): SocketData = copy(option = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = streamsStarted
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = streamsSucceeded
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = streamsFailed
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = messagesSent
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = messagesReceived
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = keepAlivesSent
          if (__t != 0L) __t else null
        }
        case 7 => lastLocalStreamCreatedTimestamp.orNull
        case 8 => lastRemoteStreamCreatedTimestamp.orNull
        case 9 => lastMessageSentTimestamp.orNull
        case 10 => lastMessageReceivedTimestamp.orNull
        case 11 => localFlowControlWindow.map(io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toBase).orNull
        case 12 => remoteFlowControlWindow.map(io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toBase).orNull
        case 13 => option
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(streamsStarted)
        case 2 => _root_.scalapb.descriptors.PLong(streamsSucceeded)
        case 3 => _root_.scalapb.descriptors.PLong(streamsFailed)
        case 4 => _root_.scalapb.descriptors.PLong(messagesSent)
        case 5 => _root_.scalapb.descriptors.PLong(messagesReceived)
        case 6 => _root_.scalapb.descriptors.PLong(keepAlivesSent)
        case 7 => lastLocalStreamCreatedTimestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => lastRemoteStreamCreatedTimestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => lastMessageSentTimestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => lastMessageReceivedTimestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => localFlowControlWindow.map(io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => remoteFlowControlWindow.map(io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => _root_.scalapb.descriptors.PRepeated(option.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = io.grpc.channelz.v1.SocketData
}

object SocketData extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.SocketData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.SocketData] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.SocketData = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    io.grpc.channelz.v1.SocketData(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(1), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(3), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(4), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(5), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.get(__fields.get(6)).asInstanceOf[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]],
      __fieldsMap.get(__fields.get(7)).asInstanceOf[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]],
      __fieldsMap.get(__fields.get(8)).asInstanceOf[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]],
      __fieldsMap.get(__fields.get(9)).asInstanceOf[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]],
      __fieldsMap.get(__fields.get(10)).asInstanceOf[_root_.scala.Option[com.google.protobuf.wrappers.Int64Value]].map(io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toCustom),
      __fieldsMap.get(__fields.get(11)).asInstanceOf[_root_.scala.Option[com.google.protobuf.wrappers.Int64Value]].map(io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toCustom),
      __fieldsMap.getOrElse(__fields.get(12), Nil).asInstanceOf[_root_.scala.Seq[io.grpc.channelz.v1.SocketOption]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.SocketData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      io.grpc.channelz.v1.SocketData(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.Int64Value]]).map(io.grpc.channelz.v1.SocketData._typemapper_localFlowControlWindow.toCustom),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.Int64Value]]).map(io.grpc.channelz.v1.SocketData._typemapper_remoteFlowControlWindow.toCustom),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Seq[io.grpc.channelz.v1.SocketOption]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ChannelzProto.javaDescriptor.getMessageTypes.get(13)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ChannelzProto.scalaDescriptor.messages(13)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 7 => __out = com.google.protobuf.timestamp.Timestamp
      case 8 => __out = com.google.protobuf.timestamp.Timestamp
      case 9 => __out = com.google.protobuf.timestamp.Timestamp
      case 10 => __out = com.google.protobuf.timestamp.Timestamp
      case 11 => __out = com.google.protobuf.wrappers.Int64Value
      case 12 => __out = com.google.protobuf.wrappers.Int64Value
      case 13 => __out = io.grpc.channelz.v1.SocketOption
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.grpc.channelz.v1.SocketData(
    streamsStarted = 0L,
    streamsSucceeded = 0L,
    streamsFailed = 0L,
    messagesSent = 0L,
    messagesReceived = 0L,
    keepAlivesSent = 0L,
    lastLocalStreamCreatedTimestamp = _root_.scala.None,
    lastRemoteStreamCreatedTimestamp = _root_.scala.None,
    lastMessageSentTimestamp = _root_.scala.None,
    lastMessageReceivedTimestamp = _root_.scala.None,
    localFlowControlWindow = _root_.scala.None,
    remoteFlowControlWindow = _root_.scala.None,
    option = _root_.scala.Seq.empty
  )
  implicit class SocketDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.SocketData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.SocketData](_l) {
    def streamsStarted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.streamsStarted)((c_, f_) => c_.copy(streamsStarted = f_))
    def streamsSucceeded: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.streamsSucceeded)((c_, f_) => c_.copy(streamsSucceeded = f_))
    def streamsFailed: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.streamsFailed)((c_, f_) => c_.copy(streamsFailed = f_))
    def messagesSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.messagesSent)((c_, f_) => c_.copy(messagesSent = f_))
    def messagesReceived: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.messagesReceived)((c_, f_) => c_.copy(messagesReceived = f_))
    def keepAlivesSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.keepAlivesSent)((c_, f_) => c_.copy(keepAlivesSent = f_))
    def lastLocalStreamCreatedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getLastLocalStreamCreatedTimestamp)((c_, f_) => c_.copy(lastLocalStreamCreatedTimestamp = Option(f_)))
    def optionalLastLocalStreamCreatedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.lastLocalStreamCreatedTimestamp)((c_, f_) => c_.copy(lastLocalStreamCreatedTimestamp = f_))
    def lastRemoteStreamCreatedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getLastRemoteStreamCreatedTimestamp)((c_, f_) => c_.copy(lastRemoteStreamCreatedTimestamp = Option(f_)))
    def optionalLastRemoteStreamCreatedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.lastRemoteStreamCreatedTimestamp)((c_, f_) => c_.copy(lastRemoteStreamCreatedTimestamp = f_))
    def lastMessageSentTimestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getLastMessageSentTimestamp)((c_, f_) => c_.copy(lastMessageSentTimestamp = Option(f_)))
    def optionalLastMessageSentTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.lastMessageSentTimestamp)((c_, f_) => c_.copy(lastMessageSentTimestamp = f_))
    def lastMessageReceivedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getLastMessageReceivedTimestamp)((c_, f_) => c_.copy(lastMessageReceivedTimestamp = Option(f_)))
    def optionalLastMessageReceivedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.lastMessageReceivedTimestamp)((c_, f_) => c_.copy(lastMessageReceivedTimestamp = f_))
    def localFlowControlWindow: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getLocalFlowControlWindow)((c_, f_) => c_.copy(localFlowControlWindow = Option(f_)))
    def optionalLocalFlowControlWindow: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.localFlowControlWindow)((c_, f_) => c_.copy(localFlowControlWindow = f_))
    def remoteFlowControlWindow: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getRemoteFlowControlWindow)((c_, f_) => c_.copy(remoteFlowControlWindow = Option(f_)))
    def optionalRemoteFlowControlWindow: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.remoteFlowControlWindow)((c_, f_) => c_.copy(remoteFlowControlWindow = f_))
    def option: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.grpc.channelz.v1.SocketOption]] = field(_.option)((c_, f_) => c_.copy(option = f_))
  }
  final val STREAMS_STARTED_FIELD_NUMBER = 1
  final val STREAMS_SUCCEEDED_FIELD_NUMBER = 2
  final val STREAMS_FAILED_FIELD_NUMBER = 3
  final val MESSAGES_SENT_FIELD_NUMBER = 4
  final val MESSAGES_RECEIVED_FIELD_NUMBER = 5
  final val KEEP_ALIVES_SENT_FIELD_NUMBER = 6
  final val LAST_LOCAL_STREAM_CREATED_TIMESTAMP_FIELD_NUMBER = 7
  final val LAST_REMOTE_STREAM_CREATED_TIMESTAMP_FIELD_NUMBER = 8
  final val LAST_MESSAGE_SENT_TIMESTAMP_FIELD_NUMBER = 9
  final val LAST_MESSAGE_RECEIVED_TIMESTAMP_FIELD_NUMBER = 10
  final val LOCAL_FLOW_CONTROL_WINDOW_FIELD_NUMBER = 11
  final val REMOTE_FLOW_CONTROL_WINDOW_FIELD_NUMBER = 12
  final val OPTION_FIELD_NUMBER = 13
  @transient
  private val _typemapper_localFlowControlWindow: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.Int64Value, _root_.scala.Long] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.Int64Value, _root_.scala.Long]]
  @transient
  private val _typemapper_remoteFlowControlWindow: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.Int64Value, _root_.scala.Long] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.Int64Value, _root_.scala.Long]]
  def of(
    streamsStarted: _root_.scala.Long,
    streamsSucceeded: _root_.scala.Long,
    streamsFailed: _root_.scala.Long,
    messagesSent: _root_.scala.Long,
    messagesReceived: _root_.scala.Long,
    keepAlivesSent: _root_.scala.Long,
    lastLocalStreamCreatedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    lastRemoteStreamCreatedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    lastMessageSentTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    lastMessageReceivedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    localFlowControlWindow: _root_.scala.Option[_root_.scala.Long],
    remoteFlowControlWindow: _root_.scala.Option[_root_.scala.Long],
    option: _root_.scala.Seq[io.grpc.channelz.v1.SocketOption]
  ): _root_.io.grpc.channelz.v1.SocketData = _root_.io.grpc.channelz.v1.SocketData(
    streamsStarted,
    streamsSucceeded,
    streamsFailed,
    messagesSent,
    messagesReceived,
    keepAlivesSent,
    lastLocalStreamCreatedTimestamp,
    lastRemoteStreamCreatedTimestamp,
    lastMessageSentTimestamp,
    lastMessageReceivedTimestamp,
    localFlowControlWindow,
    remoteFlowControlWindow,
    option
  )
}
