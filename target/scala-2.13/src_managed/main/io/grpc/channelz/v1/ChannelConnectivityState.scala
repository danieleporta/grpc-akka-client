// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.grpc.channelz.v1

/** These come from the specified states in this document:
  * https://github.com/grpc/grpc/blob/master/doc/connectivity-semantics-and-api.md
  */
@SerialVersionUID(0L)
final case class ChannelConnectivityState(
    state: io.grpc.channelz.v1.ChannelConnectivityState.State = io.grpc.channelz.v1.ChannelConnectivityState.State.UNKNOWN
    ) extends scalapb.GeneratedMessage with scalapb.Message[ChannelConnectivityState] with scalapb.lenses.Updatable[ChannelConnectivityState] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = state
        if (__value != io.grpc.channelz.v1.ChannelConnectivityState.State.UNKNOWN) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value.value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = state
        if (__v != io.grpc.channelz.v1.ChannelConnectivityState.State.UNKNOWN) {
          _output__.writeEnum(1, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.ChannelConnectivityState = {
      var __state = this.state
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __state = io.grpc.channelz.v1.ChannelConnectivityState.State.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      io.grpc.channelz.v1.ChannelConnectivityState(
          state = __state
      )
    }
    def withState(__v: io.grpc.channelz.v1.ChannelConnectivityState.State): ChannelConnectivityState = copy(state = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = state.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(state.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = io.grpc.channelz.v1.ChannelConnectivityState
}

object ChannelConnectivityState extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.ChannelConnectivityState] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.ChannelConnectivityState] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.ChannelConnectivityState = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    io.grpc.channelz.v1.ChannelConnectivityState(
      io.grpc.channelz.v1.ChannelConnectivityState.State.fromValue(__fieldsMap.getOrElse(__fields.get(0), io.grpc.channelz.v1.ChannelConnectivityState.State.UNKNOWN.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.ChannelConnectivityState] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      io.grpc.channelz.v1.ChannelConnectivityState(
        io.grpc.channelz.v1.ChannelConnectivityState.State.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.grpc.channelz.v1.ChannelConnectivityState.State.UNKNOWN.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ChannelzProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ChannelzProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => io.grpc.channelz.v1.ChannelConnectivityState.State
    }
  }
  lazy val defaultInstance = io.grpc.channelz.v1.ChannelConnectivityState(
    state = io.grpc.channelz.v1.ChannelConnectivityState.State.UNKNOWN
  )
  sealed trait State extends _root_.scalapb.GeneratedEnum {
    type EnumType = State
    def isUnknown: _root_.scala.Boolean = false
    def isIdle: _root_.scala.Boolean = false
    def isConnecting: _root_.scala.Boolean = false
    def isReady: _root_.scala.Boolean = false
    def isTransientFailure: _root_.scala.Boolean = false
    def isShutdown: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[State] = io.grpc.channelz.v1.ChannelConnectivityState.State
  }
  
  object State extends _root_.scalapb.GeneratedEnumCompanion[State] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[State] = this
    @SerialVersionUID(0L)
    case object UNKNOWN extends State {
      val value = 0
      val index = 0
      val name = "UNKNOWN"
      override def isUnknown: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object IDLE extends State {
      val value = 1
      val index = 1
      val name = "IDLE"
      override def isIdle: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CONNECTING extends State {
      val value = 2
      val index = 2
      val name = "CONNECTING"
      override def isConnecting: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object READY extends State {
      val value = 3
      val index = 3
      val name = "READY"
      override def isReady: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object TRANSIENT_FAILURE extends State {
      val value = 4
      val index = 4
      val name = "TRANSIENT_FAILURE"
      override def isTransientFailure: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object SHUTDOWN extends State {
      val value = 5
      val index = 5
      val name = "SHUTDOWN"
      override def isShutdown: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends State with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(UNKNOWN, IDLE, CONNECTING, READY, TRANSIENT_FAILURE, SHUTDOWN)
    def fromValue(value: _root_.scala.Int): State = value match {
      case 0 => UNKNOWN
      case 1 => IDLE
      case 2 => CONNECTING
      case 3 => READY
      case 4 => TRANSIENT_FAILURE
      case 5 => SHUTDOWN
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.grpc.channelz.v1.ChannelConnectivityState.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.grpc.channelz.v1.ChannelConnectivityState.scalaDescriptor.enums(0)
  }
  implicit class ChannelConnectivityStateLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.ChannelConnectivityState]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.ChannelConnectivityState](_l) {
    def state: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.ChannelConnectivityState.State] = field(_.state)((c_, f_) => c_.copy(state = f_))
  }
  final val STATE_FIELD_NUMBER = 1
  def of(
    state: io.grpc.channelz.v1.ChannelConnectivityState.State
  ): _root_.io.grpc.channelz.v1.ChannelConnectivityState = _root_.io.grpc.channelz.v1.ChannelConnectivityState(
    state
  )
}
