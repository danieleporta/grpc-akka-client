// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.grpc.channelz.v1

/** Security represents details about how secure the socket is.
  */
@SerialVersionUID(0L)
final case class Security(
    model: io.grpc.channelz.v1.Security.Model = io.grpc.channelz.v1.Security.Model.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[Security] with scalapb.lenses.Updatable[Security] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (model.tls.isDefined) {
        val __value = model.tls.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (model.other.isDefined) {
        val __value = model.other.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      model.tls.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      model.other.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.Security = {
      var __model = this.model
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __model = io.grpc.channelz.v1.Security.Model.Tls(_root_.scalapb.LiteParser.readMessage(_input__, model.tls.getOrElse(io.grpc.channelz.v1.Security.Tls.defaultInstance)))
          case 18 =>
            __model = io.grpc.channelz.v1.Security.Model.Other(_root_.scalapb.LiteParser.readMessage(_input__, model.other.getOrElse(io.grpc.channelz.v1.Security.OtherSecurity.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      io.grpc.channelz.v1.Security(
          model = __model
      )
    }
    def getTls: io.grpc.channelz.v1.Security.Tls = model.tls.getOrElse(io.grpc.channelz.v1.Security.Tls.defaultInstance)
    def withTls(__v: io.grpc.channelz.v1.Security.Tls): Security = copy(model = io.grpc.channelz.v1.Security.Model.Tls(__v))
    def getOther: io.grpc.channelz.v1.Security.OtherSecurity = model.other.getOrElse(io.grpc.channelz.v1.Security.OtherSecurity.defaultInstance)
    def withOther(__v: io.grpc.channelz.v1.Security.OtherSecurity): Security = copy(model = io.grpc.channelz.v1.Security.Model.Other(__v))
    def clearModel: Security = copy(model = io.grpc.channelz.v1.Security.Model.Empty)
    def withModel(__v: io.grpc.channelz.v1.Security.Model): Security = copy(model = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => model.tls.orNull
        case 2 => model.other.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => model.tls.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => model.other.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = io.grpc.channelz.v1.Security
}

object Security extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.Security] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.Security] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.Security = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    io.grpc.channelz.v1.Security(
      model = __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[io.grpc.channelz.v1.Security.Tls]].map(io.grpc.channelz.v1.Security.Model.Tls)
    .orElse[io.grpc.channelz.v1.Security.Model](__fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[io.grpc.channelz.v1.Security.OtherSecurity]].map(io.grpc.channelz.v1.Security.Model.Other))
    .getOrElse(io.grpc.channelz.v1.Security.Model.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.Security] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      io.grpc.channelz.v1.Security(
        model = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.grpc.channelz.v1.Security.Tls]]).map(io.grpc.channelz.v1.Security.Model.Tls)
    .orElse[io.grpc.channelz.v1.Security.Model](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.grpc.channelz.v1.Security.OtherSecurity]]).map(io.grpc.channelz.v1.Security.Model.Other))
    .getOrElse(io.grpc.channelz.v1.Security.Model.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ChannelzProto.javaDescriptor.getMessageTypes.get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ChannelzProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.grpc.channelz.v1.Security.Tls
      case 2 => __out = io.grpc.channelz.v1.Security.OtherSecurity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.io.grpc.channelz.v1.Security.Tls,
      _root_.io.grpc.channelz.v1.Security.OtherSecurity
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.grpc.channelz.v1.Security(
    model = io.grpc.channelz.v1.Security.Model.Empty
  )
  sealed trait Model extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isTls: _root_.scala.Boolean = false
    def isOther: _root_.scala.Boolean = false
    def tls: _root_.scala.Option[io.grpc.channelz.v1.Security.Tls] = _root_.scala.None
    def other: _root_.scala.Option[io.grpc.channelz.v1.Security.OtherSecurity] = _root_.scala.None
  }
  object Model extends {
    @SerialVersionUID(0L)
    case object Empty extends io.grpc.channelz.v1.Security.Model {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Tls(value: io.grpc.channelz.v1.Security.Tls) extends io.grpc.channelz.v1.Security.Model {
      type ValueType = io.grpc.channelz.v1.Security.Tls
      override def isTls: _root_.scala.Boolean = true
      override def tls: _root_.scala.Option[io.grpc.channelz.v1.Security.Tls] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Other(value: io.grpc.channelz.v1.Security.OtherSecurity) extends io.grpc.channelz.v1.Security.Model {
      type ValueType = io.grpc.channelz.v1.Security.OtherSecurity
      override def isOther: _root_.scala.Boolean = true
      override def other: _root_.scala.Option[io.grpc.channelz.v1.Security.OtherSecurity] = Some(value)
      override def number: _root_.scala.Int = 2
    }
  }
  /** @param localCertificate
    *   the certificate used by this endpoint.
    * @param remoteCertificate
    *   the certificate used by the remote endpoint.
    */
  @SerialVersionUID(0L)
  final case class Tls(
      localCertificate: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
      remoteCertificate: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
      cipherSuite: io.grpc.channelz.v1.Security.Tls.CipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.Empty
      ) extends scalapb.GeneratedMessage with scalapb.Message[Tls] with scalapb.lenses.Updatable[Tls] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        if (cipherSuite.standardName.isDefined) {
          val __value = cipherSuite.standardName.get
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        };
        if (cipherSuite.otherName.isDefined) {
          val __value = cipherSuite.otherName.get
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        };
        
        {
          val __value = localCertificate
          if (__value != _root_.com.google.protobuf.ByteString.EMPTY) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
          }
        };
        
        {
          val __value = remoteCertificate
          if (__value != _root_.com.google.protobuf.ByteString.EMPTY) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, __value)
          }
        };
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        cipherSuite.standardName.foreach { __v =>
          val __m = __v
          _output__.writeString(1, __m)
        };
        cipherSuite.otherName.foreach { __v =>
          val __m = __v
          _output__.writeString(2, __m)
        };
        {
          val __v = localCertificate
          if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
            _output__.writeBytes(3, __v)
          }
        };
        {
          val __v = remoteCertificate
          if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
            _output__.writeBytes(4, __v)
          }
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.Security.Tls = {
        var __localCertificate = this.localCertificate
        var __remoteCertificate = this.remoteCertificate
        var __cipherSuite = this.cipherSuite
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.StandardName(_input__.readString())
            case 18 =>
              __cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.OtherName(_input__.readString())
            case 26 =>
              __localCertificate = _input__.readBytes()
            case 34 =>
              __remoteCertificate = _input__.readBytes()
            case tag => _input__.skipField(tag)
          }
        }
        io.grpc.channelz.v1.Security.Tls(
            localCertificate = __localCertificate,
            remoteCertificate = __remoteCertificate,
            cipherSuite = __cipherSuite
        )
      }
      def getStandardName: _root_.scala.Predef.String = cipherSuite.standardName.getOrElse("")
      def withStandardName(__v: _root_.scala.Predef.String): Tls = copy(cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.StandardName(__v))
      def getOtherName: _root_.scala.Predef.String = cipherSuite.otherName.getOrElse("")
      def withOtherName(__v: _root_.scala.Predef.String): Tls = copy(cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.OtherName(__v))
      def withLocalCertificate(__v: _root_.com.google.protobuf.ByteString): Tls = copy(localCertificate = __v)
      def withRemoteCertificate(__v: _root_.com.google.protobuf.ByteString): Tls = copy(remoteCertificate = __v)
      def clearCipherSuite: Tls = copy(cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.Empty)
      def withCipherSuite(__v: io.grpc.channelz.v1.Security.Tls.CipherSuite): Tls = copy(cipherSuite = __v)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => cipherSuite.standardName.orNull
          case 2 => cipherSuite.otherName.orNull
          case 3 => {
            val __t = localCertificate
            if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
          }
          case 4 => {
            val __t = remoteCertificate
            if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => cipherSuite.standardName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => cipherSuite.otherName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => _root_.scalapb.descriptors.PByteString(localCertificate)
          case 4 => _root_.scalapb.descriptors.PByteString(remoteCertificate)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = io.grpc.channelz.v1.Security.Tls
  }
  
  object Tls extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.Security.Tls] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.Security.Tls] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.Security.Tls = {
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      io.grpc.channelz.v1.Security.Tls(
        __fieldsMap.getOrElse(__fields.get(2), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
        __fieldsMap.getOrElse(__fields.get(3), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
        cipherSuite = __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(io.grpc.channelz.v1.Security.Tls.CipherSuite.StandardName)
    .orElse[io.grpc.channelz.v1.Security.Tls.CipherSuite](__fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(io.grpc.channelz.v1.Security.Tls.CipherSuite.OtherName))
    .getOrElse(io.grpc.channelz.v1.Security.Tls.CipherSuite.Empty)
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.Security.Tls] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        io.grpc.channelz.v1.Security.Tls(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
          cipherSuite = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(io.grpc.channelz.v1.Security.Tls.CipherSuite.StandardName)
    .orElse[io.grpc.channelz.v1.Security.Tls.CipherSuite](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(io.grpc.channelz.v1.Security.Tls.CipherSuite.OtherName))
    .getOrElse(io.grpc.channelz.v1.Security.Tls.CipherSuite.Empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.grpc.channelz.v1.Security.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.grpc.channelz.v1.Security.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = io.grpc.channelz.v1.Security.Tls(
      localCertificate = _root_.com.google.protobuf.ByteString.EMPTY,
      remoteCertificate = _root_.com.google.protobuf.ByteString.EMPTY,
      cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.Empty
    )
    sealed trait CipherSuite extends _root_.scalapb.GeneratedOneof {
      def isEmpty: _root_.scala.Boolean = false
      def isDefined: _root_.scala.Boolean = true
      def isStandardName: _root_.scala.Boolean = false
      def isOtherName: _root_.scala.Boolean = false
      def standardName: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
      def otherName: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    }
    object CipherSuite extends {
      @SerialVersionUID(0L)
      case object Empty extends io.grpc.channelz.v1.Security.Tls.CipherSuite {
        type ValueType = _root_.scala.Nothing
        override def isEmpty: _root_.scala.Boolean = true
        override def isDefined: _root_.scala.Boolean = false
        override def number: _root_.scala.Int = 0
        override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
      }
    
      @SerialVersionUID(0L)
      final case class StandardName(value: _root_.scala.Predef.String) extends io.grpc.channelz.v1.Security.Tls.CipherSuite {
        type ValueType = _root_.scala.Predef.String
        override def isStandardName: _root_.scala.Boolean = true
        override def standardName: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
        override def number: _root_.scala.Int = 1
      }
      @SerialVersionUID(0L)
      final case class OtherName(value: _root_.scala.Predef.String) extends io.grpc.channelz.v1.Security.Tls.CipherSuite {
        type ValueType = _root_.scala.Predef.String
        override def isOtherName: _root_.scala.Boolean = true
        override def otherName: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
        override def number: _root_.scala.Int = 2
      }
    }
    implicit class TlsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.Security.Tls]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.Security.Tls](_l) {
      def standardName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getStandardName)((c_, f_) => c_.copy(cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.StandardName(f_)))
      def otherName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getOtherName)((c_, f_) => c_.copy(cipherSuite = io.grpc.channelz.v1.Security.Tls.CipherSuite.OtherName(f_)))
      def localCertificate: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.localCertificate)((c_, f_) => c_.copy(localCertificate = f_))
      def remoteCertificate: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.remoteCertificate)((c_, f_) => c_.copy(remoteCertificate = f_))
      def cipherSuite: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.Security.Tls.CipherSuite] = field(_.cipherSuite)((c_, f_) => c_.copy(cipherSuite = f_))
    }
    final val STANDARD_NAME_FIELD_NUMBER = 1
    final val OTHER_NAME_FIELD_NUMBER = 2
    final val LOCAL_CERTIFICATE_FIELD_NUMBER = 3
    final val REMOTE_CERTIFICATE_FIELD_NUMBER = 4
    def of(
      localCertificate: _root_.com.google.protobuf.ByteString,
      remoteCertificate: _root_.com.google.protobuf.ByteString,
      cipherSuite: io.grpc.channelz.v1.Security.Tls.CipherSuite
    ): _root_.io.grpc.channelz.v1.Security.Tls = _root_.io.grpc.channelz.v1.Security.Tls(
      localCertificate,
      remoteCertificate,
      cipherSuite
    )
  }
  
  /** @param name
    *   The human readable version of the value.
    * @param value
    *   The actual security details message.
    */
  @SerialVersionUID(0L)
  final case class OtherSecurity(
      name: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
      ) extends scalapb.GeneratedMessage with scalapb.Message[OtherSecurity] with scalapb.lenses.Updatable[OtherSecurity] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = name
          if (__value != "") {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = name
          if (__v != "") {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.Security.OtherSecurity = {
        var __name = this.name
        var __value = this.value
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __name = _input__.readString()
            case 18 =>
              __value = Option(_root_.scalapb.LiteParser.readMessage(_input__, __value.getOrElse(com.google.protobuf.any.Any.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        io.grpc.channelz.v1.Security.OtherSecurity(
            name = __name,
            value = __value
        )
      }
      def withName(__v: _root_.scala.Predef.String): OtherSecurity = copy(name = __v)
      def getValue: com.google.protobuf.any.Any = value.getOrElse(com.google.protobuf.any.Any.defaultInstance)
      def clearValue: OtherSecurity = copy(value = _root_.scala.None)
      def withValue(__v: com.google.protobuf.any.Any): OtherSecurity = copy(value = Option(__v))
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = name
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(name)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = io.grpc.channelz.v1.Security.OtherSecurity
  }
  
  object OtherSecurity extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.Security.OtherSecurity] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.Security.OtherSecurity] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.Security.OtherSecurity = {
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      io.grpc.channelz.v1.Security.OtherSecurity(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[com.google.protobuf.any.Any]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.Security.OtherSecurity] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        io.grpc.channelz.v1.Security.OtherSecurity(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.grpc.channelz.v1.Security.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.grpc.channelz.v1.Security.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = com.google.protobuf.any.Any
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = io.grpc.channelz.v1.Security.OtherSecurity(
      name = "",
      value = _root_.scala.None
    )
    implicit class OtherSecurityLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.Security.OtherSecurity]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.Security.OtherSecurity](_l) {
      def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getValue)((c_, f_) => c_.copy(value = Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val NAME_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    def of(
      name: _root_.scala.Predef.String,
      value: _root_.scala.Option[com.google.protobuf.any.Any]
    ): _root_.io.grpc.channelz.v1.Security.OtherSecurity = _root_.io.grpc.channelz.v1.Security.OtherSecurity(
      name,
      value
    )
  }
  
  implicit class SecurityLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.Security]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.Security](_l) {
    def tls: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.Security.Tls] = field(_.getTls)((c_, f_) => c_.copy(model = io.grpc.channelz.v1.Security.Model.Tls(f_)))
    def other: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.Security.OtherSecurity] = field(_.getOther)((c_, f_) => c_.copy(model = io.grpc.channelz.v1.Security.Model.Other(f_)))
    def model: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.Security.Model] = field(_.model)((c_, f_) => c_.copy(model = f_))
  }
  final val TLS_FIELD_NUMBER = 1
  final val OTHER_FIELD_NUMBER = 2
  def of(
    model: io.grpc.channelz.v1.Security.Model
  ): _root_.io.grpc.channelz.v1.Security = _root_.io.grpc.channelz.v1.Security(
    model
  )
}
