// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.grpc.channelz.v1

/** For use with SocketOption's additional field.  Tcp info for
  * SOL_TCP and TCP_INFO.
  */
@SerialVersionUID(0L)
final case class SocketOptionTcpInfo(
    tcpiState: _root_.scala.Int = 0,
    tcpiCaState: _root_.scala.Int = 0,
    tcpiRetransmits: _root_.scala.Int = 0,
    tcpiProbes: _root_.scala.Int = 0,
    tcpiBackoff: _root_.scala.Int = 0,
    tcpiOptions: _root_.scala.Int = 0,
    tcpiSndWscale: _root_.scala.Int = 0,
    tcpiRcvWscale: _root_.scala.Int = 0,
    tcpiRto: _root_.scala.Int = 0,
    tcpiAto: _root_.scala.Int = 0,
    tcpiSndMss: _root_.scala.Int = 0,
    tcpiRcvMss: _root_.scala.Int = 0,
    tcpiUnacked: _root_.scala.Int = 0,
    tcpiSacked: _root_.scala.Int = 0,
    tcpiLost: _root_.scala.Int = 0,
    tcpiRetrans: _root_.scala.Int = 0,
    tcpiFackets: _root_.scala.Int = 0,
    tcpiLastDataSent: _root_.scala.Int = 0,
    tcpiLastAckSent: _root_.scala.Int = 0,
    tcpiLastDataRecv: _root_.scala.Int = 0,
    tcpiLastAckRecv: _root_.scala.Int = 0,
    tcpiPmtu: _root_.scala.Int = 0,
    tcpiRcvSsthresh: _root_.scala.Int = 0,
    tcpiRtt: _root_.scala.Int = 0,
    tcpiRttvar: _root_.scala.Int = 0,
    tcpiSndSsthresh: _root_.scala.Int = 0,
    tcpiSndCwnd: _root_.scala.Int = 0,
    tcpiAdvmss: _root_.scala.Int = 0,
    tcpiReordering: _root_.scala.Int = 0
    ) extends scalapb.GeneratedMessage with scalapb.Message[SocketOptionTcpInfo] with scalapb.lenses.Updatable[SocketOptionTcpInfo] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = tcpiState
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
        }
      };
      
      {
        val __value = tcpiCaState
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(2, __value)
        }
      };
      
      {
        val __value = tcpiRetransmits
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, __value)
        }
      };
      
      {
        val __value = tcpiProbes
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(4, __value)
        }
      };
      
      {
        val __value = tcpiBackoff
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(5, __value)
        }
      };
      
      {
        val __value = tcpiOptions
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(6, __value)
        }
      };
      
      {
        val __value = tcpiSndWscale
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(7, __value)
        }
      };
      
      {
        val __value = tcpiRcvWscale
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(8, __value)
        }
      };
      
      {
        val __value = tcpiRto
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(9, __value)
        }
      };
      
      {
        val __value = tcpiAto
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(10, __value)
        }
      };
      
      {
        val __value = tcpiSndMss
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(11, __value)
        }
      };
      
      {
        val __value = tcpiRcvMss
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(12, __value)
        }
      };
      
      {
        val __value = tcpiUnacked
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(13, __value)
        }
      };
      
      {
        val __value = tcpiSacked
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(14, __value)
        }
      };
      
      {
        val __value = tcpiLost
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(15, __value)
        }
      };
      
      {
        val __value = tcpiRetrans
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(16, __value)
        }
      };
      
      {
        val __value = tcpiFackets
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(17, __value)
        }
      };
      
      {
        val __value = tcpiLastDataSent
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(18, __value)
        }
      };
      
      {
        val __value = tcpiLastAckSent
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(19, __value)
        }
      };
      
      {
        val __value = tcpiLastDataRecv
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(20, __value)
        }
      };
      
      {
        val __value = tcpiLastAckRecv
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(21, __value)
        }
      };
      
      {
        val __value = tcpiPmtu
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(22, __value)
        }
      };
      
      {
        val __value = tcpiRcvSsthresh
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(23, __value)
        }
      };
      
      {
        val __value = tcpiRtt
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(24, __value)
        }
      };
      
      {
        val __value = tcpiRttvar
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(25, __value)
        }
      };
      
      {
        val __value = tcpiSndSsthresh
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(26, __value)
        }
      };
      
      {
        val __value = tcpiSndCwnd
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(27, __value)
        }
      };
      
      {
        val __value = tcpiAdvmss
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(28, __value)
        }
      };
      
      {
        val __value = tcpiReordering
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(29, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = tcpiState
        if (__v != 0) {
          _output__.writeUInt32(1, __v)
        }
      };
      {
        val __v = tcpiCaState
        if (__v != 0) {
          _output__.writeUInt32(2, __v)
        }
      };
      {
        val __v = tcpiRetransmits
        if (__v != 0) {
          _output__.writeUInt32(3, __v)
        }
      };
      {
        val __v = tcpiProbes
        if (__v != 0) {
          _output__.writeUInt32(4, __v)
        }
      };
      {
        val __v = tcpiBackoff
        if (__v != 0) {
          _output__.writeUInt32(5, __v)
        }
      };
      {
        val __v = tcpiOptions
        if (__v != 0) {
          _output__.writeUInt32(6, __v)
        }
      };
      {
        val __v = tcpiSndWscale
        if (__v != 0) {
          _output__.writeUInt32(7, __v)
        }
      };
      {
        val __v = tcpiRcvWscale
        if (__v != 0) {
          _output__.writeUInt32(8, __v)
        }
      };
      {
        val __v = tcpiRto
        if (__v != 0) {
          _output__.writeUInt32(9, __v)
        }
      };
      {
        val __v = tcpiAto
        if (__v != 0) {
          _output__.writeUInt32(10, __v)
        }
      };
      {
        val __v = tcpiSndMss
        if (__v != 0) {
          _output__.writeUInt32(11, __v)
        }
      };
      {
        val __v = tcpiRcvMss
        if (__v != 0) {
          _output__.writeUInt32(12, __v)
        }
      };
      {
        val __v = tcpiUnacked
        if (__v != 0) {
          _output__.writeUInt32(13, __v)
        }
      };
      {
        val __v = tcpiSacked
        if (__v != 0) {
          _output__.writeUInt32(14, __v)
        }
      };
      {
        val __v = tcpiLost
        if (__v != 0) {
          _output__.writeUInt32(15, __v)
        }
      };
      {
        val __v = tcpiRetrans
        if (__v != 0) {
          _output__.writeUInt32(16, __v)
        }
      };
      {
        val __v = tcpiFackets
        if (__v != 0) {
          _output__.writeUInt32(17, __v)
        }
      };
      {
        val __v = tcpiLastDataSent
        if (__v != 0) {
          _output__.writeUInt32(18, __v)
        }
      };
      {
        val __v = tcpiLastAckSent
        if (__v != 0) {
          _output__.writeUInt32(19, __v)
        }
      };
      {
        val __v = tcpiLastDataRecv
        if (__v != 0) {
          _output__.writeUInt32(20, __v)
        }
      };
      {
        val __v = tcpiLastAckRecv
        if (__v != 0) {
          _output__.writeUInt32(21, __v)
        }
      };
      {
        val __v = tcpiPmtu
        if (__v != 0) {
          _output__.writeUInt32(22, __v)
        }
      };
      {
        val __v = tcpiRcvSsthresh
        if (__v != 0) {
          _output__.writeUInt32(23, __v)
        }
      };
      {
        val __v = tcpiRtt
        if (__v != 0) {
          _output__.writeUInt32(24, __v)
        }
      };
      {
        val __v = tcpiRttvar
        if (__v != 0) {
          _output__.writeUInt32(25, __v)
        }
      };
      {
        val __v = tcpiSndSsthresh
        if (__v != 0) {
          _output__.writeUInt32(26, __v)
        }
      };
      {
        val __v = tcpiSndCwnd
        if (__v != 0) {
          _output__.writeUInt32(27, __v)
        }
      };
      {
        val __v = tcpiAdvmss
        if (__v != 0) {
          _output__.writeUInt32(28, __v)
        }
      };
      {
        val __v = tcpiReordering
        if (__v != 0) {
          _output__.writeUInt32(29, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.SocketOptionTcpInfo = {
      var __tcpiState = this.tcpiState
      var __tcpiCaState = this.tcpiCaState
      var __tcpiRetransmits = this.tcpiRetransmits
      var __tcpiProbes = this.tcpiProbes
      var __tcpiBackoff = this.tcpiBackoff
      var __tcpiOptions = this.tcpiOptions
      var __tcpiSndWscale = this.tcpiSndWscale
      var __tcpiRcvWscale = this.tcpiRcvWscale
      var __tcpiRto = this.tcpiRto
      var __tcpiAto = this.tcpiAto
      var __tcpiSndMss = this.tcpiSndMss
      var __tcpiRcvMss = this.tcpiRcvMss
      var __tcpiUnacked = this.tcpiUnacked
      var __tcpiSacked = this.tcpiSacked
      var __tcpiLost = this.tcpiLost
      var __tcpiRetrans = this.tcpiRetrans
      var __tcpiFackets = this.tcpiFackets
      var __tcpiLastDataSent = this.tcpiLastDataSent
      var __tcpiLastAckSent = this.tcpiLastAckSent
      var __tcpiLastDataRecv = this.tcpiLastDataRecv
      var __tcpiLastAckRecv = this.tcpiLastAckRecv
      var __tcpiPmtu = this.tcpiPmtu
      var __tcpiRcvSsthresh = this.tcpiRcvSsthresh
      var __tcpiRtt = this.tcpiRtt
      var __tcpiRttvar = this.tcpiRttvar
      var __tcpiSndSsthresh = this.tcpiSndSsthresh
      var __tcpiSndCwnd = this.tcpiSndCwnd
      var __tcpiAdvmss = this.tcpiAdvmss
      var __tcpiReordering = this.tcpiReordering
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __tcpiState = _input__.readUInt32()
          case 16 =>
            __tcpiCaState = _input__.readUInt32()
          case 24 =>
            __tcpiRetransmits = _input__.readUInt32()
          case 32 =>
            __tcpiProbes = _input__.readUInt32()
          case 40 =>
            __tcpiBackoff = _input__.readUInt32()
          case 48 =>
            __tcpiOptions = _input__.readUInt32()
          case 56 =>
            __tcpiSndWscale = _input__.readUInt32()
          case 64 =>
            __tcpiRcvWscale = _input__.readUInt32()
          case 72 =>
            __tcpiRto = _input__.readUInt32()
          case 80 =>
            __tcpiAto = _input__.readUInt32()
          case 88 =>
            __tcpiSndMss = _input__.readUInt32()
          case 96 =>
            __tcpiRcvMss = _input__.readUInt32()
          case 104 =>
            __tcpiUnacked = _input__.readUInt32()
          case 112 =>
            __tcpiSacked = _input__.readUInt32()
          case 120 =>
            __tcpiLost = _input__.readUInt32()
          case 128 =>
            __tcpiRetrans = _input__.readUInt32()
          case 136 =>
            __tcpiFackets = _input__.readUInt32()
          case 144 =>
            __tcpiLastDataSent = _input__.readUInt32()
          case 152 =>
            __tcpiLastAckSent = _input__.readUInt32()
          case 160 =>
            __tcpiLastDataRecv = _input__.readUInt32()
          case 168 =>
            __tcpiLastAckRecv = _input__.readUInt32()
          case 176 =>
            __tcpiPmtu = _input__.readUInt32()
          case 184 =>
            __tcpiRcvSsthresh = _input__.readUInt32()
          case 192 =>
            __tcpiRtt = _input__.readUInt32()
          case 200 =>
            __tcpiRttvar = _input__.readUInt32()
          case 208 =>
            __tcpiSndSsthresh = _input__.readUInt32()
          case 216 =>
            __tcpiSndCwnd = _input__.readUInt32()
          case 224 =>
            __tcpiAdvmss = _input__.readUInt32()
          case 232 =>
            __tcpiReordering = _input__.readUInt32()
          case tag => _input__.skipField(tag)
        }
      }
      io.grpc.channelz.v1.SocketOptionTcpInfo(
          tcpiState = __tcpiState,
          tcpiCaState = __tcpiCaState,
          tcpiRetransmits = __tcpiRetransmits,
          tcpiProbes = __tcpiProbes,
          tcpiBackoff = __tcpiBackoff,
          tcpiOptions = __tcpiOptions,
          tcpiSndWscale = __tcpiSndWscale,
          tcpiRcvWscale = __tcpiRcvWscale,
          tcpiRto = __tcpiRto,
          tcpiAto = __tcpiAto,
          tcpiSndMss = __tcpiSndMss,
          tcpiRcvMss = __tcpiRcvMss,
          tcpiUnacked = __tcpiUnacked,
          tcpiSacked = __tcpiSacked,
          tcpiLost = __tcpiLost,
          tcpiRetrans = __tcpiRetrans,
          tcpiFackets = __tcpiFackets,
          tcpiLastDataSent = __tcpiLastDataSent,
          tcpiLastAckSent = __tcpiLastAckSent,
          tcpiLastDataRecv = __tcpiLastDataRecv,
          tcpiLastAckRecv = __tcpiLastAckRecv,
          tcpiPmtu = __tcpiPmtu,
          tcpiRcvSsthresh = __tcpiRcvSsthresh,
          tcpiRtt = __tcpiRtt,
          tcpiRttvar = __tcpiRttvar,
          tcpiSndSsthresh = __tcpiSndSsthresh,
          tcpiSndCwnd = __tcpiSndCwnd,
          tcpiAdvmss = __tcpiAdvmss,
          tcpiReordering = __tcpiReordering
      )
    }
    def withTcpiState(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiState = __v)
    def withTcpiCaState(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiCaState = __v)
    def withTcpiRetransmits(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRetransmits = __v)
    def withTcpiProbes(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiProbes = __v)
    def withTcpiBackoff(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiBackoff = __v)
    def withTcpiOptions(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiOptions = __v)
    def withTcpiSndWscale(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiSndWscale = __v)
    def withTcpiRcvWscale(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRcvWscale = __v)
    def withTcpiRto(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRto = __v)
    def withTcpiAto(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiAto = __v)
    def withTcpiSndMss(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiSndMss = __v)
    def withTcpiRcvMss(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRcvMss = __v)
    def withTcpiUnacked(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiUnacked = __v)
    def withTcpiSacked(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiSacked = __v)
    def withTcpiLost(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiLost = __v)
    def withTcpiRetrans(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRetrans = __v)
    def withTcpiFackets(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiFackets = __v)
    def withTcpiLastDataSent(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiLastDataSent = __v)
    def withTcpiLastAckSent(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiLastAckSent = __v)
    def withTcpiLastDataRecv(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiLastDataRecv = __v)
    def withTcpiLastAckRecv(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiLastAckRecv = __v)
    def withTcpiPmtu(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiPmtu = __v)
    def withTcpiRcvSsthresh(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRcvSsthresh = __v)
    def withTcpiRtt(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRtt = __v)
    def withTcpiRttvar(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiRttvar = __v)
    def withTcpiSndSsthresh(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiSndSsthresh = __v)
    def withTcpiSndCwnd(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiSndCwnd = __v)
    def withTcpiAdvmss(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiAdvmss = __v)
    def withTcpiReordering(__v: _root_.scala.Int): SocketOptionTcpInfo = copy(tcpiReordering = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = tcpiState
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = tcpiCaState
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = tcpiRetransmits
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = tcpiProbes
          if (__t != 0) __t else null
        }
        case 5 => {
          val __t = tcpiBackoff
          if (__t != 0) __t else null
        }
        case 6 => {
          val __t = tcpiOptions
          if (__t != 0) __t else null
        }
        case 7 => {
          val __t = tcpiSndWscale
          if (__t != 0) __t else null
        }
        case 8 => {
          val __t = tcpiRcvWscale
          if (__t != 0) __t else null
        }
        case 9 => {
          val __t = tcpiRto
          if (__t != 0) __t else null
        }
        case 10 => {
          val __t = tcpiAto
          if (__t != 0) __t else null
        }
        case 11 => {
          val __t = tcpiSndMss
          if (__t != 0) __t else null
        }
        case 12 => {
          val __t = tcpiRcvMss
          if (__t != 0) __t else null
        }
        case 13 => {
          val __t = tcpiUnacked
          if (__t != 0) __t else null
        }
        case 14 => {
          val __t = tcpiSacked
          if (__t != 0) __t else null
        }
        case 15 => {
          val __t = tcpiLost
          if (__t != 0) __t else null
        }
        case 16 => {
          val __t = tcpiRetrans
          if (__t != 0) __t else null
        }
        case 17 => {
          val __t = tcpiFackets
          if (__t != 0) __t else null
        }
        case 18 => {
          val __t = tcpiLastDataSent
          if (__t != 0) __t else null
        }
        case 19 => {
          val __t = tcpiLastAckSent
          if (__t != 0) __t else null
        }
        case 20 => {
          val __t = tcpiLastDataRecv
          if (__t != 0) __t else null
        }
        case 21 => {
          val __t = tcpiLastAckRecv
          if (__t != 0) __t else null
        }
        case 22 => {
          val __t = tcpiPmtu
          if (__t != 0) __t else null
        }
        case 23 => {
          val __t = tcpiRcvSsthresh
          if (__t != 0) __t else null
        }
        case 24 => {
          val __t = tcpiRtt
          if (__t != 0) __t else null
        }
        case 25 => {
          val __t = tcpiRttvar
          if (__t != 0) __t else null
        }
        case 26 => {
          val __t = tcpiSndSsthresh
          if (__t != 0) __t else null
        }
        case 27 => {
          val __t = tcpiSndCwnd
          if (__t != 0) __t else null
        }
        case 28 => {
          val __t = tcpiAdvmss
          if (__t != 0) __t else null
        }
        case 29 => {
          val __t = tcpiReordering
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(tcpiState)
        case 2 => _root_.scalapb.descriptors.PInt(tcpiCaState)
        case 3 => _root_.scalapb.descriptors.PInt(tcpiRetransmits)
        case 4 => _root_.scalapb.descriptors.PInt(tcpiProbes)
        case 5 => _root_.scalapb.descriptors.PInt(tcpiBackoff)
        case 6 => _root_.scalapb.descriptors.PInt(tcpiOptions)
        case 7 => _root_.scalapb.descriptors.PInt(tcpiSndWscale)
        case 8 => _root_.scalapb.descriptors.PInt(tcpiRcvWscale)
        case 9 => _root_.scalapb.descriptors.PInt(tcpiRto)
        case 10 => _root_.scalapb.descriptors.PInt(tcpiAto)
        case 11 => _root_.scalapb.descriptors.PInt(tcpiSndMss)
        case 12 => _root_.scalapb.descriptors.PInt(tcpiRcvMss)
        case 13 => _root_.scalapb.descriptors.PInt(tcpiUnacked)
        case 14 => _root_.scalapb.descriptors.PInt(tcpiSacked)
        case 15 => _root_.scalapb.descriptors.PInt(tcpiLost)
        case 16 => _root_.scalapb.descriptors.PInt(tcpiRetrans)
        case 17 => _root_.scalapb.descriptors.PInt(tcpiFackets)
        case 18 => _root_.scalapb.descriptors.PInt(tcpiLastDataSent)
        case 19 => _root_.scalapb.descriptors.PInt(tcpiLastAckSent)
        case 20 => _root_.scalapb.descriptors.PInt(tcpiLastDataRecv)
        case 21 => _root_.scalapb.descriptors.PInt(tcpiLastAckRecv)
        case 22 => _root_.scalapb.descriptors.PInt(tcpiPmtu)
        case 23 => _root_.scalapb.descriptors.PInt(tcpiRcvSsthresh)
        case 24 => _root_.scalapb.descriptors.PInt(tcpiRtt)
        case 25 => _root_.scalapb.descriptors.PInt(tcpiRttvar)
        case 26 => _root_.scalapb.descriptors.PInt(tcpiSndSsthresh)
        case 27 => _root_.scalapb.descriptors.PInt(tcpiSndCwnd)
        case 28 => _root_.scalapb.descriptors.PInt(tcpiAdvmss)
        case 29 => _root_.scalapb.descriptors.PInt(tcpiReordering)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = io.grpc.channelz.v1.SocketOptionTcpInfo
}

object SocketOptionTcpInfo extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.SocketOptionTcpInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.SocketOptionTcpInfo] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.SocketOptionTcpInfo = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    io.grpc.channelz.v1.SocketOptionTcpInfo(
      __fieldsMap.getOrElse(__fields.get(0), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(1), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(2), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(3), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(4), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(5), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(6), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(7), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(8), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(9), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(10), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(11), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(12), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(13), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(14), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(15), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(16), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(17), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(18), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(19), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(20), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(21), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(22), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(23), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(24), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(25), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(26), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(27), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(28), 0).asInstanceOf[_root_.scala.Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.SocketOptionTcpInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      io.grpc.channelz.v1.SocketOptionTcpInfo(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(24).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(26).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ChannelzProto.javaDescriptor.getMessageTypes.get(19)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ChannelzProto.scalaDescriptor.messages(19)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.grpc.channelz.v1.SocketOptionTcpInfo(
    tcpiState = 0,
    tcpiCaState = 0,
    tcpiRetransmits = 0,
    tcpiProbes = 0,
    tcpiBackoff = 0,
    tcpiOptions = 0,
    tcpiSndWscale = 0,
    tcpiRcvWscale = 0,
    tcpiRto = 0,
    tcpiAto = 0,
    tcpiSndMss = 0,
    tcpiRcvMss = 0,
    tcpiUnacked = 0,
    tcpiSacked = 0,
    tcpiLost = 0,
    tcpiRetrans = 0,
    tcpiFackets = 0,
    tcpiLastDataSent = 0,
    tcpiLastAckSent = 0,
    tcpiLastDataRecv = 0,
    tcpiLastAckRecv = 0,
    tcpiPmtu = 0,
    tcpiRcvSsthresh = 0,
    tcpiRtt = 0,
    tcpiRttvar = 0,
    tcpiSndSsthresh = 0,
    tcpiSndCwnd = 0,
    tcpiAdvmss = 0,
    tcpiReordering = 0
  )
  implicit class SocketOptionTcpInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.SocketOptionTcpInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.SocketOptionTcpInfo](_l) {
    def tcpiState: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiState)((c_, f_) => c_.copy(tcpiState = f_))
    def tcpiCaState: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiCaState)((c_, f_) => c_.copy(tcpiCaState = f_))
    def tcpiRetransmits: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRetransmits)((c_, f_) => c_.copy(tcpiRetransmits = f_))
    def tcpiProbes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiProbes)((c_, f_) => c_.copy(tcpiProbes = f_))
    def tcpiBackoff: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiBackoff)((c_, f_) => c_.copy(tcpiBackoff = f_))
    def tcpiOptions: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiOptions)((c_, f_) => c_.copy(tcpiOptions = f_))
    def tcpiSndWscale: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiSndWscale)((c_, f_) => c_.copy(tcpiSndWscale = f_))
    def tcpiRcvWscale: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRcvWscale)((c_, f_) => c_.copy(tcpiRcvWscale = f_))
    def tcpiRto: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRto)((c_, f_) => c_.copy(tcpiRto = f_))
    def tcpiAto: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiAto)((c_, f_) => c_.copy(tcpiAto = f_))
    def tcpiSndMss: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiSndMss)((c_, f_) => c_.copy(tcpiSndMss = f_))
    def tcpiRcvMss: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRcvMss)((c_, f_) => c_.copy(tcpiRcvMss = f_))
    def tcpiUnacked: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiUnacked)((c_, f_) => c_.copy(tcpiUnacked = f_))
    def tcpiSacked: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiSacked)((c_, f_) => c_.copy(tcpiSacked = f_))
    def tcpiLost: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiLost)((c_, f_) => c_.copy(tcpiLost = f_))
    def tcpiRetrans: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRetrans)((c_, f_) => c_.copy(tcpiRetrans = f_))
    def tcpiFackets: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiFackets)((c_, f_) => c_.copy(tcpiFackets = f_))
    def tcpiLastDataSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiLastDataSent)((c_, f_) => c_.copy(tcpiLastDataSent = f_))
    def tcpiLastAckSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiLastAckSent)((c_, f_) => c_.copy(tcpiLastAckSent = f_))
    def tcpiLastDataRecv: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiLastDataRecv)((c_, f_) => c_.copy(tcpiLastDataRecv = f_))
    def tcpiLastAckRecv: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiLastAckRecv)((c_, f_) => c_.copy(tcpiLastAckRecv = f_))
    def tcpiPmtu: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiPmtu)((c_, f_) => c_.copy(tcpiPmtu = f_))
    def tcpiRcvSsthresh: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRcvSsthresh)((c_, f_) => c_.copy(tcpiRcvSsthresh = f_))
    def tcpiRtt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRtt)((c_, f_) => c_.copy(tcpiRtt = f_))
    def tcpiRttvar: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiRttvar)((c_, f_) => c_.copy(tcpiRttvar = f_))
    def tcpiSndSsthresh: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiSndSsthresh)((c_, f_) => c_.copy(tcpiSndSsthresh = f_))
    def tcpiSndCwnd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiSndCwnd)((c_, f_) => c_.copy(tcpiSndCwnd = f_))
    def tcpiAdvmss: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiAdvmss)((c_, f_) => c_.copy(tcpiAdvmss = f_))
    def tcpiReordering: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.tcpiReordering)((c_, f_) => c_.copy(tcpiReordering = f_))
  }
  final val TCPI_STATE_FIELD_NUMBER = 1
  final val TCPI_CA_STATE_FIELD_NUMBER = 2
  final val TCPI_RETRANSMITS_FIELD_NUMBER = 3
  final val TCPI_PROBES_FIELD_NUMBER = 4
  final val TCPI_BACKOFF_FIELD_NUMBER = 5
  final val TCPI_OPTIONS_FIELD_NUMBER = 6
  final val TCPI_SND_WSCALE_FIELD_NUMBER = 7
  final val TCPI_RCV_WSCALE_FIELD_NUMBER = 8
  final val TCPI_RTO_FIELD_NUMBER = 9
  final val TCPI_ATO_FIELD_NUMBER = 10
  final val TCPI_SND_MSS_FIELD_NUMBER = 11
  final val TCPI_RCV_MSS_FIELD_NUMBER = 12
  final val TCPI_UNACKED_FIELD_NUMBER = 13
  final val TCPI_SACKED_FIELD_NUMBER = 14
  final val TCPI_LOST_FIELD_NUMBER = 15
  final val TCPI_RETRANS_FIELD_NUMBER = 16
  final val TCPI_FACKETS_FIELD_NUMBER = 17
  final val TCPI_LAST_DATA_SENT_FIELD_NUMBER = 18
  final val TCPI_LAST_ACK_SENT_FIELD_NUMBER = 19
  final val TCPI_LAST_DATA_RECV_FIELD_NUMBER = 20
  final val TCPI_LAST_ACK_RECV_FIELD_NUMBER = 21
  final val TCPI_PMTU_FIELD_NUMBER = 22
  final val TCPI_RCV_SSTHRESH_FIELD_NUMBER = 23
  final val TCPI_RTT_FIELD_NUMBER = 24
  final val TCPI_RTTVAR_FIELD_NUMBER = 25
  final val TCPI_SND_SSTHRESH_FIELD_NUMBER = 26
  final val TCPI_SND_CWND_FIELD_NUMBER = 27
  final val TCPI_ADVMSS_FIELD_NUMBER = 28
  final val TCPI_REORDERING_FIELD_NUMBER = 29
  def of(
    tcpiState: _root_.scala.Int,
    tcpiCaState: _root_.scala.Int,
    tcpiRetransmits: _root_.scala.Int,
    tcpiProbes: _root_.scala.Int,
    tcpiBackoff: _root_.scala.Int,
    tcpiOptions: _root_.scala.Int,
    tcpiSndWscale: _root_.scala.Int,
    tcpiRcvWscale: _root_.scala.Int,
    tcpiRto: _root_.scala.Int,
    tcpiAto: _root_.scala.Int,
    tcpiSndMss: _root_.scala.Int,
    tcpiRcvMss: _root_.scala.Int,
    tcpiUnacked: _root_.scala.Int,
    tcpiSacked: _root_.scala.Int,
    tcpiLost: _root_.scala.Int,
    tcpiRetrans: _root_.scala.Int,
    tcpiFackets: _root_.scala.Int,
    tcpiLastDataSent: _root_.scala.Int,
    tcpiLastAckSent: _root_.scala.Int,
    tcpiLastDataRecv: _root_.scala.Int,
    tcpiLastAckRecv: _root_.scala.Int,
    tcpiPmtu: _root_.scala.Int,
    tcpiRcvSsthresh: _root_.scala.Int,
    tcpiRtt: _root_.scala.Int,
    tcpiRttvar: _root_.scala.Int,
    tcpiSndSsthresh: _root_.scala.Int,
    tcpiSndCwnd: _root_.scala.Int,
    tcpiAdvmss: _root_.scala.Int,
    tcpiReordering: _root_.scala.Int
  ): _root_.io.grpc.channelz.v1.SocketOptionTcpInfo = _root_.io.grpc.channelz.v1.SocketOptionTcpInfo(
    tcpiState,
    tcpiCaState,
    tcpiRetransmits,
    tcpiProbes,
    tcpiBackoff,
    tcpiOptions,
    tcpiSndWscale,
    tcpiRcvWscale,
    tcpiRto,
    tcpiAto,
    tcpiSndMss,
    tcpiRcvMss,
    tcpiUnacked,
    tcpiSacked,
    tcpiLost,
    tcpiRetrans,
    tcpiFackets,
    tcpiLastDataSent,
    tcpiLastAckSent,
    tcpiLastDataRecv,
    tcpiLastAckRecv,
    tcpiPmtu,
    tcpiRcvSsthresh,
    tcpiRtt,
    tcpiRttvar,
    tcpiSndSsthresh,
    tcpiSndCwnd,
    tcpiAdvmss,
    tcpiReordering
  )
}
