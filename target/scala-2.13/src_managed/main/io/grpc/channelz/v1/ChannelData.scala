// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.grpc.channelz.v1

/** Channel data is data related to a specific Channel or Subchannel.
  *
  * @param state
  *   The connectivity state of the channel or subchannel.  Implementations
  *   should always set this.
  * @param target
  *   The target this channel originally tried to connect to.  May be absent
  * @param trace
  *   A trace of recent events on the channel.  May be absent.
  * @param callsStarted
  *   The number of calls started on the channel
  * @param callsSucceeded
  *   The number of calls that have completed with an OK status
  * @param callsFailed
  *   The number of calls that have completed with a non-OK status
  * @param lastCallStartedTimestamp
  *   The last time a call was started on the channel.
  */
@SerialVersionUID(0L)
final case class ChannelData(
    state: _root_.scala.Option[io.grpc.channelz.v1.ChannelConnectivityState] = _root_.scala.None,
    target: _root_.scala.Predef.String = "",
    trace: _root_.scala.Option[io.grpc.channelz.v1.ChannelTrace] = _root_.scala.None,
    callsStarted: _root_.scala.Long = 0L,
    callsSucceeded: _root_.scala.Long = 0L,
    callsFailed: _root_.scala.Long = 0L,
    lastCallStartedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    ) extends scalapb.GeneratedMessage with scalapb.Message[ChannelData] with scalapb.lenses.Updatable[ChannelData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (state.isDefined) {
        val __value = state.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = target
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      if (trace.isDefined) {
        val __value = trace.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = callsStarted
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      
      {
        val __value = callsSucceeded
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, __value)
        }
      };
      
      {
        val __value = callsFailed
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(6, __value)
        }
      };
      if (lastCallStartedTimestamp.isDefined) {
        val __value = lastCallStartedTimestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      state.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = target
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      trace.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = callsStarted
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      {
        val __v = callsSucceeded
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      {
        val __v = callsFailed
        if (__v != 0L) {
          _output__.writeInt64(6, __v)
        }
      };
      lastCallStartedTimestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.grpc.channelz.v1.ChannelData = {
      var __state = this.state
      var __target = this.target
      var __trace = this.trace
      var __callsStarted = this.callsStarted
      var __callsSucceeded = this.callsSucceeded
      var __callsFailed = this.callsFailed
      var __lastCallStartedTimestamp = this.lastCallStartedTimestamp
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __state = Option(_root_.scalapb.LiteParser.readMessage(_input__, __state.getOrElse(io.grpc.channelz.v1.ChannelConnectivityState.defaultInstance)))
          case 18 =>
            __target = _input__.readString()
          case 26 =>
            __trace = Option(_root_.scalapb.LiteParser.readMessage(_input__, __trace.getOrElse(io.grpc.channelz.v1.ChannelTrace.defaultInstance)))
          case 32 =>
            __callsStarted = _input__.readInt64()
          case 40 =>
            __callsSucceeded = _input__.readInt64()
          case 48 =>
            __callsFailed = _input__.readInt64()
          case 58 =>
            __lastCallStartedTimestamp = Option(_root_.scalapb.LiteParser.readMessage(_input__, __lastCallStartedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      io.grpc.channelz.v1.ChannelData(
          state = __state,
          target = __target,
          trace = __trace,
          callsStarted = __callsStarted,
          callsSucceeded = __callsSucceeded,
          callsFailed = __callsFailed,
          lastCallStartedTimestamp = __lastCallStartedTimestamp
      )
    }
    def getState: io.grpc.channelz.v1.ChannelConnectivityState = state.getOrElse(io.grpc.channelz.v1.ChannelConnectivityState.defaultInstance)
    def clearState: ChannelData = copy(state = _root_.scala.None)
    def withState(__v: io.grpc.channelz.v1.ChannelConnectivityState): ChannelData = copy(state = Option(__v))
    def withTarget(__v: _root_.scala.Predef.String): ChannelData = copy(target = __v)
    def getTrace: io.grpc.channelz.v1.ChannelTrace = trace.getOrElse(io.grpc.channelz.v1.ChannelTrace.defaultInstance)
    def clearTrace: ChannelData = copy(trace = _root_.scala.None)
    def withTrace(__v: io.grpc.channelz.v1.ChannelTrace): ChannelData = copy(trace = Option(__v))
    def withCallsStarted(__v: _root_.scala.Long): ChannelData = copy(callsStarted = __v)
    def withCallsSucceeded(__v: _root_.scala.Long): ChannelData = copy(callsSucceeded = __v)
    def withCallsFailed(__v: _root_.scala.Long): ChannelData = copy(callsFailed = __v)
    def getLastCallStartedTimestamp: com.google.protobuf.timestamp.Timestamp = lastCallStartedTimestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearLastCallStartedTimestamp: ChannelData = copy(lastCallStartedTimestamp = _root_.scala.None)
    def withLastCallStartedTimestamp(__v: com.google.protobuf.timestamp.Timestamp): ChannelData = copy(lastCallStartedTimestamp = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => state.orNull
        case 2 => {
          val __t = target
          if (__t != "") __t else null
        }
        case 3 => trace.orNull
        case 4 => {
          val __t = callsStarted
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = callsSucceeded
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = callsFailed
          if (__t != 0L) __t else null
        }
        case 7 => lastCallStartedTimestamp.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => state.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(target)
        case 3 => trace.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PLong(callsStarted)
        case 5 => _root_.scalapb.descriptors.PLong(callsSucceeded)
        case 6 => _root_.scalapb.descriptors.PLong(callsFailed)
        case 7 => lastCallStartedTimestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = io.grpc.channelz.v1.ChannelData
}

object ChannelData extends scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.ChannelData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.grpc.channelz.v1.ChannelData] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.grpc.channelz.v1.ChannelData = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    io.grpc.channelz.v1.ChannelData(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[io.grpc.channelz.v1.ChannelConnectivityState]],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[io.grpc.channelz.v1.ChannelTrace]],
      __fieldsMap.getOrElse(__fields.get(3), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(4), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(5), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.get(__fields.get(6)).asInstanceOf[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.grpc.channelz.v1.ChannelData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      io.grpc.channelz.v1.ChannelData(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.grpc.channelz.v1.ChannelConnectivityState]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[io.grpc.channelz.v1.ChannelTrace]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ChannelzProto.javaDescriptor.getMessageTypes.get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ChannelzProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.grpc.channelz.v1.ChannelConnectivityState
      case 3 => __out = io.grpc.channelz.v1.ChannelTrace
      case 7 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.grpc.channelz.v1.ChannelData(
    state = _root_.scala.None,
    target = "",
    trace = _root_.scala.None,
    callsStarted = 0L,
    callsSucceeded = 0L,
    callsFailed = 0L,
    lastCallStartedTimestamp = _root_.scala.None
  )
  implicit class ChannelDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.ChannelData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.grpc.channelz.v1.ChannelData](_l) {
    def state: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.ChannelConnectivityState] = field(_.getState)((c_, f_) => c_.copy(state = Option(f_)))
    def optionalState: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.grpc.channelz.v1.ChannelConnectivityState]] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def target: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.target)((c_, f_) => c_.copy(target = f_))
    def trace: _root_.scalapb.lenses.Lens[UpperPB, io.grpc.channelz.v1.ChannelTrace] = field(_.getTrace)((c_, f_) => c_.copy(trace = Option(f_)))
    def optionalTrace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.grpc.channelz.v1.ChannelTrace]] = field(_.trace)((c_, f_) => c_.copy(trace = f_))
    def callsStarted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.callsStarted)((c_, f_) => c_.copy(callsStarted = f_))
    def callsSucceeded: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.callsSucceeded)((c_, f_) => c_.copy(callsSucceeded = f_))
    def callsFailed: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.callsFailed)((c_, f_) => c_.copy(callsFailed = f_))
    def lastCallStartedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getLastCallStartedTimestamp)((c_, f_) => c_.copy(lastCallStartedTimestamp = Option(f_)))
    def optionalLastCallStartedTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.lastCallStartedTimestamp)((c_, f_) => c_.copy(lastCallStartedTimestamp = f_))
  }
  final val STATE_FIELD_NUMBER = 1
  final val TARGET_FIELD_NUMBER = 2
  final val TRACE_FIELD_NUMBER = 3
  final val CALLS_STARTED_FIELD_NUMBER = 4
  final val CALLS_SUCCEEDED_FIELD_NUMBER = 5
  final val CALLS_FAILED_FIELD_NUMBER = 6
  final val LAST_CALL_STARTED_TIMESTAMP_FIELD_NUMBER = 7
  def of(
    state: _root_.scala.Option[io.grpc.channelz.v1.ChannelConnectivityState],
    target: _root_.scala.Predef.String,
    trace: _root_.scala.Option[io.grpc.channelz.v1.ChannelTrace],
    callsStarted: _root_.scala.Long,
    callsSucceeded: _root_.scala.Long,
    callsFailed: _root_.scala.Long,
    lastCallStartedTimestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]
  ): _root_.io.grpc.channelz.v1.ChannelData = _root_.io.grpc.channelz.v1.ChannelData(
    state,
    target,
    trace,
    callsStarted,
    callsSucceeded,
    callsFailed,
    lastCallStartedTimestamp
  )
}
